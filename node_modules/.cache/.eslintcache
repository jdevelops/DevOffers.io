[{"C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\index.js":"1","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\App.js":"2","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\Create.js":"3","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\Update.js":"4","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\Home.js":"5","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\config\\supabaseClient.js":"6","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\components\\smoothieCard.js":"7","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\Login.js":"8","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\SignUp.js":"9","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\Homepage.js":"10","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\Offer.js":"11","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\CreatedOffers.js":"12","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\About.js":"13"},{"size":256,"mtime":1675266275942,"results":"14","hashOfConfig":"15"},{"size":2269,"mtime":1675682194139,"results":"16","hashOfConfig":"15"},{"size":8135,"mtime":1675643841514,"results":"17","hashOfConfig":"15"},{"size":6318,"mtime":1675381024397,"results":"18","hashOfConfig":"15"},{"size":9181,"mtime":1675681572066,"results":"19","hashOfConfig":"15"},{"size":256,"mtime":1675681574292,"results":"20","hashOfConfig":"15"},{"size":6171,"mtime":1675642968622,"results":"21","hashOfConfig":"15"},{"size":1591,"mtime":1675668095039,"results":"22","hashOfConfig":"15"},{"size":1672,"mtime":1675671273227,"results":"23","hashOfConfig":"15"},{"size":1909,"mtime":1675679168410,"results":"24","hashOfConfig":"15"},{"size":2974,"mtime":1675696079201,"results":"25","hashOfConfig":"15"},{"size":11968,"mtime":1675680779461,"results":"26","hashOfConfig":"15"},{"size":1109,"mtime":1675685639544,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"115kv7j",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\index.js",[],[],[],"C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\App.js",[],[],"C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\Create.js",[],[],"C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\Update.js",[],[],"C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\Home.js",[],["73","74"],"C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\config\\supabaseClient.js",[],[],"C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\components\\smoothieCard.js",["75"],[],"import { Link } from \"react-router-dom\";\r\nimport supabase from \"../config/supabaseClient\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst SmoothieCard = ({ smoothie, onDeleteProp, token }) => {\r\n  const [favFlag, setFavFlag] = useState(true); // PAMIETAĆ O RÓZNICY MIEDZY WYSWETILANYM STANEM A FALGA W SKRYPCIE\r\n  // USER WIDZI PUSTA GWIAZDKE -> PO KLIKNIECIU DODA DO ULUBIONY\r\n  // UI WYSTWIETLA OBECNY STAN\r\n  // destrukturyzacja, Zawartość obietu otrzymujemy z propa z Home.js\r\n\r\n  //zabezpieczenie przed dostępem bez tokenu\r\n  if (!token) {\r\n    token = {\r\n      user: \"\",\r\n    };\r\n  }\r\n\r\n  //useEffect sprawdza polubienia\r\n  useEffect(() => {\r\n    if (token) {\r\n      const checkFav = () => {\r\n        if (smoothie.liked_by.includes(token.user.id)) {\r\n          setFavFlag(true);\r\n          console.log(\"zawiera id\");\r\n          console.log(smoothie.liked_by);\r\n          console.log(\"flaga :\" + favFlag);\r\n        } else if (!smoothie.liked_by.includes(token.user.id)) {\r\n          setFavFlag(false);\r\n          console.log(\"nie zawiera id\");\r\n        }\r\n      };\r\n\r\n      checkFav();\r\n    } else {\r\n    }\r\n  }, []);\r\n  //Inicjalizacja daty\r\n  const time = new Date();\r\n  // FUNKCJA OBLICZAJĄCA CZAS OD DODANIA { KALKULACJA W MINUTACH}\r\n  function timeCalc() {\r\n    let createdTime =\r\n      parseInt(smoothie.created_at.slice(0, 4)) * 8760 +\r\n      parseInt(smoothie.created_at.slice(5, 7)) * 720 +\r\n      parseInt(smoothie.created_at.slice(8, 10)) * 24;\r\n    let currentTime =\r\n      time.getFullYear() * 8760 +\r\n      (time.getMonth() + 1) * 720 +\r\n      time.getDate() * 24;\r\n    //funkcja zwraca skonfigurowanego strniga\r\n    let timeDif = currentTime - createdTime;\r\n    let outputValue;\r\n\r\n    if (timeDif <= 48) {\r\n      outputValue = \"NOWE\";\r\n    } else if (timeDif > 48) {\r\n      outputValue = \"DODANO \" + timeDif / 24 + \" DNI TEMU\";\r\n    } else {\r\n      outputValue = \"error\";\r\n    }\r\n    return outputValue;\r\n  }\r\n\r\n  // FUNKCJA LIKE\r\n  const handleFav = async () => {\r\n    console.log(\"call by handleFav \" + smoothie.liked_by);\r\n\r\n    //console.log(token.user.id); // działą wyswietla user id\r\n\r\n    if (favFlag === false && token.user) {\r\n      let likeArr = smoothie.liked_by;\r\n      likeArr.push(token.user.id);\r\n      const { data, error } = await supabase\r\n        .from(\"smoothies\")\r\n        .update({ liked_by: likeArr })\r\n        .eq(\"id\", smoothie.id)\r\n        .select(\"liked_by\");\r\n\r\n      if (error) {\r\n        console.log(\"error przy dodawniu fav\");\r\n      }\r\n      if (data) {\r\n        console.log(\"updated fav\");\r\n        console.log(smoothie.liked_by);\r\n        setFavFlag(true);\r\n      }\r\n      setFavFlag(!favFlag);\r\n    } else if (favFlag === true && token.user) {\r\n      let likeArr = smoothie.liked_by;\r\n      let index = likeArr.indexOf(token.user.id);\r\n      likeArr.splice(index, 1); // 2nd parameter means remove one item only\r\n      const { data, error } = await supabase\r\n        .from(\"smoothies\")\r\n        .update({ liked_by: likeArr })\r\n        .eq(\"id\", smoothie.id)\r\n        .select(\"liked_by\");\r\n\r\n      if (error) {\r\n        console.log(\"error przy usuwaniu fav\");\r\n      }\r\n      if (data) {\r\n        console.log(\"usunieto\");\r\n        console.log(smoothie.liked_by);\r\n        setFavFlag(false);\r\n      }\r\n    } else if (!token.user) {\r\n      alert(\"you have to be logged \");\r\n    }\r\n  };\r\n\r\n  // FUNKCJA USUWAJĄCA WPIS\r\n  const handleDelete = async () => {\r\n    const { data, error } = await supabase\r\n      .from(\"smoothies\")\r\n      .delete()\r\n      .eq(\"id\", smoothie.id) // przekazanne z SmoothieCard po destrukturyzacji\r\n      .select();\r\n\r\n    if (error) {\r\n      console.log(error);\r\n    }\r\n    if (data) {\r\n      console.log(\"usunieto wpis\");\r\n      console.log(data);\r\n      onDeleteProp(smoothie.id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"smoothies_card\">\r\n      <div className=\"smoothies_logo-div\">\r\n        <img\r\n          className=\"smoothies_logo\"\r\n          src={smoothie.category_logo}\r\n          alt=\"LOGO TEST\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"smoothies_main\">\r\n        <div>\r\n          <h2>{smoothie.title.toUpperCase()}</h2>\r\n          <div className=\"company-name\">{smoothie.company_name}</div>\r\n          <div className=\"position-level\">{smoothie.position_level}</div>\r\n        </div>\r\n\r\n        <div className=\"smoothies_main-data\">\r\n          <p>{timeCalc()}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"smoothies_side\">\r\n        <div className=\"rating\">\r\n          {smoothie.salary_low} - {smoothie.salary_top}zł\r\n        </div>\r\n        <div className=\"smoothies_side-open-helper\">\r\n          <Link className=\"smoothies_side-open\" to={\"/\" + smoothie.id}>\r\n            <i className=\"material-icons\">arrow_forward_ios</i>\r\n          </Link>\r\n        </div>\r\n        <div className=\"smoothies_side-buttons\">\r\n          {!token && <i className=\"material-icons\"></i>}\r\n\r\n          {smoothie.created_by === token.user.id && (\r\n            <i className=\"material-icons\" onClick={handleDelete}>\r\n              delete\r\n            </i>\r\n          )}\r\n          {smoothie.created_by === token.user.id && (\r\n            <Link to={\"/\" + smoothie.id + \"/edit\"}>\r\n              <i className=\"material-icons\">edit</i>\r\n            </Link>\r\n          )}\r\n\r\n          {token.user && (\r\n            <div onClick={handleFav}>\r\n              {favFlag && (\r\n                <i onClick={handleFav} className=\"material-icons\">\r\n                  star\r\n                </i>\r\n              )}\r\n              {!favFlag && (\r\n                <i onClick={handleFav} className=\"material-icons\">\r\n                  star_border\r\n                </i>\r\n              )}\r\n            </div>\r\n          )}\r\n          {!token.user && (\r\n            <div disabled=\"disabled\">\r\n              {favFlag && <i className=\"material-icons\">star</i>}\r\n              {!favFlag && <i className=\"material-icons\">star_border</i>}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ); //return zwraca template\r\n};\r\n\r\nexport default SmoothieCard; // export componentu na zewnątrz\r\n\r\n// WYŚTWIETLANIE TEKSTU W MAŁEJ OFERCIE\r\n// <p>{smoothie.recepie}</p>\r\n","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\Login.js",[],[],"C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\SignUp.js",["76"],[],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport supabase from \"../config/supabaseClient\";\n\nconst SignUp = () => {\n  // przechowywanie danych ionputu\n  const [formData, setFormData] = useState({\n    fullName: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  // Obsługa inputu\n  function handleChange(event) {\n    setFormData((prevFormData) => {\n      return {\n        ...prevFormData,\n        [event.target.name]: event.target.value,\n      };\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      const { data, error } = await supabase.auth.signUp({\n        email: formData.email,\n        password: formData.password,\n        options: {\n          data: {\n            full_name: formData.fullName,\n          },\n        },\n      });\n      if (error) throw error;\n      alert(\"Check your email for verification link\");\n    } catch (error) {\n      alert(error);\n    }\n  }\n\n  return (\n    <div>\n      <h1 className=\"login__title\">Zarejestruj się</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          placeholder=\"Nazwa użytkownika\"\n          name=\"fullName\"\n          onChange={handleChange}\n        />\n\n        <input placeholder=\"Email\" name=\"email\" onChange={handleChange} />\n\n        <input\n          placeholder=\"Hasło\"\n          name=\"password\"\n          type=\"password\"\n          onChange={handleChange}\n        />\n\n        <button type=\"submit\">Zarejestruj się </button>\n      </form>\n      <div className=\"login_footer\">\n        <span>\n          Posiadasz już konto? <Link to=\"/Login\">Zaloguj się </Link>\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUp;\n","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\Homepage.js",["77","78"],[],"import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport supabase from \"../config/supabaseClient\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n\nconst Homepage = ({ token }) => {\n  const [createDate, setCreateDate] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  let navigate = useNavigate();\n\n  const profilInfo = () => {\n    setCreateDate(token.user.created_at.substring(0, 10));\n    let emailArr = token.user.email.split(\"\");\n    for (let i = 0; i < 5; i++) {\n      emailArr[i + 3] = \"*\";\n    }\n    let x = emailArr.join(\"\");\n    setEmail(x);\n  };\n  //funkcja sprawdzajaca id przy ponownym fetchu\n  async function checkID() {\n    const {\n      data: { user },\n    } = await supabase.auth.getUser();\n    //console.log(user);\n    console.log(email);\n  }\n\n  //funkcja logout\n  function handleLogout() {\n    sessionStorage.removeItem(\"token\");\n    supabase.auth.signOut();\n    token = false;\n    navigate(\"/\", { token });\n    window.location.reload(true);\n  }\n\n  useEffect(() => {\n    profilInfo();\n  }, []);\n  return (\n    <div className=\"page\">\n      <h1 className=\"login__title\">Profil</h1>\n      <div className=\"profile_card\">\n        <img\n          className=\"profile_img\"\n          src=\"https://lzjwjilirbqiypntnadj.supabase.co/storage/v1/object/public/logos/user.webp\"\n          alt=\"profile_picture\"\n        />\n        <h3>Witaj, {token.user.user_metadata.full_name}</h3>\n        <ul>\n          <li>Profil utworzono: {createDate}</li>\n          <li>Adres mailowy: {email}</li>\n        </ul>\n        <div className=\"profile_footer\">\n          <button className=\"hidden\" onClick={checkID}>\n            Check uuid\n          </button>\n          <Link to=\"/CreatedOffers\">Twoje oferty</Link>\n\n          <button onClick={handleLogout}>Wyloguj się</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Homepage;\n","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\Offer.js",["79","80","81","82"],[],"import { useParams, useNavigate } from \"react-router-dom\"; // pozwala na użycie Hooka useParam\r\nimport { useEffect, useState } from \"react\";\r\nimport supabase from \"../config/supabaseClient\";\r\n\r\nconst Offer = () => {\r\n  const { id } = useParams(); // na podstawie routingu z app.js przyjmujemy paratmetr id który możemy użyć w obecnym komponencie jako obiekt\r\n  const navigate = useNavigate();\r\n  //Funkcja wywołana podczas załądowania componentu ma\r\n  const [title, setTitle] = useState(\"\");\r\n  const [company_name, setCompany_Name] = useState(\"\");\r\n  const [method, setMethod] = useState(\"\"); // potencjalnie zmienić na recepie\r\n  const [url, setUrl] = useState(\"\");\r\n  const [salary_low, setSalaryLow] = useState(0);\r\n  const [salary_top, setSalaryTop] = useState(10);\r\n  const [position_level, setPosition_Level] = useState(\"Mid\");\r\n  const [category_logo, setCategoryLogo] = useState(\"\");\r\n  const [fromError, setFormError] = useState(null);\r\n  let recepie = method;\r\n\r\n  const redirectFoo = () => {\r\n    window.open(url, \"_blank\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchSmoothie = async () => {\r\n      const { data, error } = await supabase\r\n        .from(\"smoothies\") // pobranie z tabeli\r\n        .select() // zwracanie daty\r\n        .eq(\"id\", id) //linijka odpowiedzialna za filtrowanie zwraca jeżeli kolumna \"id\" jest równa zmiennej id\r\n        .single();\r\n\r\n      if (error) {\r\n        navigate(\"/\", { replace: true }); // replace true zamienia ostatnia strone w histori na strone główną\r\n      }\r\n      if (data) {\r\n        setTitle(data.title);\r\n        setMethod(data.recepie);\r\n        setUrl(data.link_url);\r\n        setCompany_Name(data.company_name);\r\n        setSalaryLow(data.salary_low);\r\n        setSalaryTop(data.salary_top);\r\n        setPosition_Level(data.position_level);\r\n        setCategoryLogo(data.category_logo);\r\n        console.log(data);\r\n      }\r\n      /* MOZE ZOSTANIE UŻYTE\r\n      function helperFoo(d, e) {\r\n        if (d !== null) {\r\n          console.log(d, e);\r\n          console.log(\"data is not null\");\r\n        } else if (e !== null) {\r\n          console.log(d, e);\r\n          console.log(\"error is not null\");\r\n          navigate(\"/\", { replace: true });\r\n        } else {\r\n          console.log(d, e);\r\n          console.log(\"idk what happend\");\r\n        }\r\n      }\r\n      helperFoo(data, error);\r\n      */\r\n    };\r\n    fetchSmoothie(); // invoke funkcji na koniec parsowaniaHooka\r\n  }, [id, navigate]);\r\n\r\n  return (\r\n    <div className=\"page offer-view\">\r\n      <div className=\"offer-view_wrapper\">\r\n        <div className=\"offer-view_header\">\r\n          <h2>{title}</h2>\r\n        </div>\r\n\r\n        <p>Firma: {company_name} </p>\r\n        <p>Pozycja: {position_level}</p>\r\n        <p>Text: {method}</p>\r\n\r\n        <div>\r\n          Widełki: {salary_low} - {salary_top}zł\r\n        </div>\r\n        <button onClick={redirectFoo}>APLIKUJ</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Offer;\r\n","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\CreatedOffers.js",["83","84","85"],["86","87","88"],"/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable array-callback-return */\r\nimport supabase from \"../config/supabaseClient\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n// components\r\n\r\nimport SmoothieCard from \"../components/smoothieCard\";\r\n\r\nconst CreatedOffers = ({ token }) => {\r\n  const [fetchError, setFetchError] = useState(null); // Fetch error, zmienna\r\n  const [smoothies, setSmoothies] = useState(null); // główna baza\r\n  const [orderBy, setOrderBy] = useState(\"created_at\"); // created_at jest nazwa kolumny w bazie\r\n  const [orderLocaly, setOrderLocaly] = useState(\"Sortowanie \");\r\n  const [orderAscd, setOrderAscd] = useState(true);\r\n  const [foundUsers, setFoundUsers] = useState(\"\");\r\n  const [query, setQuery] = useState(\"\");\r\n  let zmiennaEffect = \"none\";\r\n\r\n  //Funkcja usuwająca wpis lokalnie\r\n  const handleDelete = (id) => {\r\n    setSmoothies((pervSmoothies) => {\r\n      return pervSmoothies.filter((sm) => sm.id !== id);\r\n    });\r\n  };\r\n  //Funcjka sortująca\r\n  function handleSortEffect(e) {\r\n    console.log(e.target.id);\r\n    //setSortEffect(e.target.id);\r\n    zmiennaEffect = e.target.id;\r\n    switch (zmiennaEffect) {\r\n      case \"az\":\r\n        console.log(e.target);\r\n        e.target.classList.add(\"searchbar--active\");\r\n        break;\r\n      case \"data\":\r\n        e.target.classList.add(\"searchbar--active\");\r\n        break;\r\n      case \"salary\":\r\n        e.target.classList.add(\"searchbar--active\");\r\n        break;\r\n      default:\r\n        console.log(\"none1\");\r\n    }\r\n  }\r\n\r\n  //funkcja fetchujaca dane z database\r\n  useEffect(() => {\r\n    const fetchSmoothies = async () => {\r\n      const { data, error } = await supabase\r\n        .from(\"smoothies\")\r\n        .select()\r\n        .order(orderBy, { ascending: false }); // const { data, error } -> destrukturyzacja obiektu po lewej\r\n\r\n      if (error) {\r\n        setFetchError(\"Can;t fetch \");\r\n        setSmoothies(null);\r\n        console.log(error);\r\n      }\r\n      if (data) {\r\n        setSmoothies(data);\r\n        setFetchError(null);\r\n        console.log(\"POBRANO\");\r\n      }\r\n    };\r\n\r\n    fetchSmoothies();\r\n  }, []); //[orderBy] powoduje wywołanie Hooka useEffect za każdym użyciem orderby // brak tylko pojedyncze wywołanie\r\n\r\n  return (\r\n    <div className=\"page home\">\r\n      <h1>TWOJE OFERTY</h1>\r\n      {fetchError && <p>{fetchError}</p>}\r\n      {smoothies && (\r\n        <div className=\"smoothies\">\r\n          {/*Search/sort bar */}\r\n          <div className=\"searchbar\">\r\n            {/*Search input */}\r\n            <div className=\"searchbar_search\">\r\n              <input\r\n                onChange={(event) => setQuery(event.target.value)}\r\n                placeholder=\"WYSZUKAJ\"\r\n              />\r\n            </div>\r\n\r\n            {/*OPCJE SORTOWANIA  */}\r\n            <div className=\"searchbar_sort\">\r\n              <button\r\n                id=\"data\"\r\n                onClick={(obj) => {\r\n                  handleSortEffect(obj);\r\n                  smoothies.sort(function (a, b) {\r\n                    const dateA = a.created_at;\r\n                    const dateB = b.created_at;\r\n                    if (dateA > dateB) {\r\n                      return -1;\r\n                    }\r\n                    if (dateA < dateB) {\r\n                      return 1;\r\n                    }\r\n                    return 0;\r\n                  });\r\n                  if (orderAscd) {\r\n                    setSmoothies(smoothies.reverse());\r\n                    setOrderLocaly(\"Najstarsze najpierw \");\r\n                    setOrderAscd(!orderAscd);\r\n                  } else if (!orderAscd) {\r\n                    setOrderLocaly(\"Najnowsze najpierw\");\r\n                    setSmoothies(smoothies);\r\n                    setOrderAscd(!orderAscd);\r\n                  }\r\n                }}\r\n              >\r\n                DATA\r\n              </button>\r\n\r\n              <button\r\n                id=\"az\"\r\n                onClick={(obj) => {\r\n                  handleSortEffect(obj);\r\n                  smoothies.sort(function (a, b) {\r\n                    const nameA = a.title.toUpperCase(); // ignore upper and lowercase\r\n                    const nameB = b.title.toUpperCase(); // ignore upper and lowercase\r\n                    if (nameA > nameB) {\r\n                      return -1;\r\n                    }\r\n                    if (nameA < nameB) {\r\n                      return 1;\r\n                    }\r\n                    // names must be equal\r\n                    return 0;\r\n                  });\r\n                  if (orderAscd) {\r\n                    setSmoothies(smoothies.reverse());\r\n                    setOrderLocaly(\"Alfabetycznie rosnoąco\");\r\n                    setOrderAscd(!orderAscd);\r\n                  } else if (!orderAscd) {\r\n                    setOrderLocaly(\"Alfabetycznie malejąco\");\r\n                    setSmoothies(smoothies);\r\n                    setOrderAscd(!orderAscd);\r\n                  }\r\n                }}\r\n              >\r\n                A-Z\r\n              </button>\r\n              <button\r\n                id=\"salary\"\r\n                onClick={(obj) => {\r\n                  handleSortEffect(obj);\r\n                  smoothies.sort(function (a, b) {\r\n                    const salaryRangeA = (a.salary_low + a.salary_top) / 2;\r\n                    const salaryRangeB = (b.salary_low + b.salary_top) / 2;\r\n                    if (salaryRangeA < salaryRangeB) {\r\n                      return 1;\r\n                    }\r\n                    if (salaryRangeA > salaryRangeB) {\r\n                      return -1;\r\n                    }\r\n                    return 0;\r\n                  });\r\n                  if (orderAscd) {\r\n                    setSmoothies(smoothies.reverse());\r\n                    setOrderLocaly(\"widełki rosnoąco\");\r\n                    setOrderAscd(!orderAscd);\r\n                  } else if (!orderAscd) {\r\n                    setSmoothies(smoothies);\r\n                    setOrderLocaly(\"widełki malejąco\");\r\n                    setOrderAscd(!orderAscd);\r\n                  }\r\n                }}\r\n              >\r\n                STAWKA\r\n              </button>\r\n              <p className=\"searchbar_dsc\">Obecne sortowanie: {orderLocaly}</p>\r\n            </div>\r\n          </div>\r\n          {/*WYSWIETLANIE POSTÓW Z FILTREM I SORTOWANIEM  */}\r\n          <div className=\"smoothies_list\">\r\n            {smoothies\r\n              .filter((post) => {\r\n                if (query === \"\") {\r\n                  return post;\r\n                } else if (\r\n                  post.title.toLowerCase().includes(query.toLowerCase())\r\n                ) {\r\n                  return post;\r\n                }\r\n              })\r\n              .map((post) => {\r\n                if (post.created_by === token.user.id) {\r\n                  return (\r\n                    <SmoothieCard\r\n                      key={post.id}\r\n                      smoothie={post}\r\n                      onDeleteProp={handleDelete}\r\n                      token={token}\r\n                    />\r\n                  );\r\n                }\r\n              })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatedOffers;\r\n/*  INSERT IN 219 LINE IF YOU WANT TO BACKUP OLD SHOW METHOD \r\n\r\n          <div className=\"smoothie-grid\">\r\n            {smoothies.map((smoothie) => (\r\n              //<p>{smoothie.title}</p> //\r\n              <SmoothieCard\r\n                key={smoothie.id}\r\n                smoothie={smoothie}\r\n                onDeleteProp={handleDelete}\r\n              /> //smoothie={smoothie} -> smoothie jest to prop do którego przekazujemy zmienna smoothie tak jak w Svelte\r\n            ))}\r\n          </div>\r\n\r\n\r\n*/\r\n\r\n/*     SHOW FOO \r\n\r\n<div className=\"smoothie-grid\">\r\n            foo2\r\n            {foundUsers && foundUsers.length > 0 ? (\r\n              foundUsers.map((foundSmoothies) => {\r\n                if (foundSmoothies.created_by === token.user.id) {\r\n                  return (\r\n                    <SmoothieCard\r\n                      key={foundSmoothies.id}\r\n                      smoothie={foundSmoothies}\r\n                      onDeleteProp={handleDelete}\r\n                      token={token}\r\n                    />\r\n                  );\r\n                }\r\n              })\r\n            ) : (\r\n              <h1>Nic nie znaleziono </h1>\r\n            )}\r\n            ;\r\n          </div> */\r\n\r\n/*  SHOW FOO V3\r\n          <div className=\"smoothie-grid\">\r\n            foo3\r\n            {smoothies.map((smoothie) => {\r\n              if (smoothie.created_by === token.user.id) {\r\n                return (\r\n                  <SmoothieCard\r\n                    key={smoothie.id}\r\n                    smoothie={smoothie}\r\n                    onDeleteProp={handleDelete}\r\n                  />\r\n                );\r\n              }\r\n            })}\r\n          </div> */\r\n/*        FILTER WITH FETCH /// SCRAP THAT \r\n          <div className=\"order-by\">\r\n            <p>Order by:</p>\r\n            <button onClick={() => setOrderBy(\"created_at\")}>\r\n              Time Created\r\n            </button>\r\n            <button onClick={() => setOrderBy(\"title\")}>Title</button>\r\n            <button onClick={() => setOrderBy(\"rating\")}>rating</button>\r\n            {orderBy}\r\n          </div>\r\n          */\r\n\r\n/*PIERWOWZÓR SEARCH BARA\r\n                        <div className=\"user-list\">\r\n              {foundUsers && foundUsers.length > 0 ? (\r\n                foundUsers.map((smoothies) => (\r\n                  <li key={smoothies.id} className=\"user\">\r\n                    <span className=\"user-id\">{smoothies.id}</span>\r\n                    <span className=\"user-name\">{smoothies.title}</span>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <h1>No results found!</h1>\r\n              )}\r\n            </div>\r\n            */\r\n\r\n/*V2 SEARCH BAR\r\n          \r\n           <div>\r\n            SEARCH:\r\n            <input\r\n              type=\"search\"\r\n              value={name}\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n                filter();\r\n              }}\r\n              className=\"input\"\r\n              placeholder=\"Filter\"\r\n            />\r\n          </div>\r\n          */\r\n\r\n//FUNKCJA FILTRUJACA V1\r\n/*\r\n  const filter = () => {\r\n    console.log(\"e target z filtr foo\");\r\n\r\n    if (name !== \"\") {\r\n      console.log(smoothies);\r\n      const results = smoothies.filter((user) => {\r\n        return user.title.toLowerCase().includes(name.toLowerCase());\r\n        // Use the toLowerCase() method to make it case-insensitive\r\n      });\r\n      setFoundUsers(results);\r\n    } else {\r\n      setFoundUsers(smoothies);\r\n      // If the text field is empty, show all users\r\n    }\r\n  };\r\n  */\r\n/*POMOCNY DEBUG  \r\n\r\n            <div className=\"debug\">\r\n            <button\r\n              onClick={() => {\r\n                console.log(smoothies);\r\n                console.log(\"CONSOL LOG DO WYŚWEITLANIA WARUNKOWEGO \");\r\n              }}\r\n            >\r\n              DEBUG\r\n            </button>\r\n          </div>\r\n\r\n*/\r\n\r\n/*             {/*KIERUNEK SORTOWANIA SCRAP*\r\n            \r\n                        {orderDirectionAscd && (\r\n              <div>\r\n                Ascnding true\r\n                <button\r\n                  onClick={() => setOrderDirectionAscd(!orderDirectionAscd)}\r\n                >\r\n                  {<i className=\"material-icons\">arrow_drop_up</i>}\r\n                </button>\r\n              </div>\r\n            )}\r\n            {!orderDirectionAscd && (\r\n              <div>\r\n                Ascnding false\r\n                <button\r\n                  onClick={() => setOrderDirectionAscd(!orderDirectionAscd)}\r\n                >\r\n                  {<i className=\"material-icons\">arrow_drop_down</i>}\r\n                </button>\r\n              </div>\r\n            )}\r\n            \r\n            /}\r\n            {orderLocaly} {/*wyświetla rodzaj sortowania \r\n            \r\n            \r\n            */\r\n","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\About.js",[],[],{"ruleId":"89","severity":1,"message":"90","line":208,"column":32,"nodeType":"91","messageId":"92","endLine":208,"endColumn":34,"suppressions":"93"},{"ruleId":"89","severity":1,"message":"94","line":217,"column":29,"nodeType":"91","messageId":"92","endLine":217,"endColumn":31,"suppressions":"95"},{"ruleId":"96","severity":1,"message":"97","line":36,"column":6,"nodeType":"98","endLine":36,"endColumn":8,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":26,"column":15,"nodeType":"102","messageId":"103","endLine":26,"endColumn":19},{"ruleId":"100","severity":1,"message":"104","line":24,"column":15,"nodeType":"102","messageId":"103","endLine":24,"endColumn":19},{"ruleId":"96","severity":1,"message":"105","line":41,"column":6,"nodeType":"98","endLine":41,"endColumn":8,"suggestions":"106"},{"ruleId":"100","severity":1,"message":"107","line":16,"column":10,"nodeType":"102","messageId":"103","endLine":16,"endColumn":23},{"ruleId":"100","severity":1,"message":"108","line":17,"column":10,"nodeType":"102","messageId":"103","endLine":17,"endColumn":19},{"ruleId":"100","severity":1,"message":"109","line":17,"column":21,"nodeType":"102","messageId":"103","endLine":17,"endColumn":33},{"ruleId":"100","severity":1,"message":"110","line":18,"column":7,"nodeType":"102","messageId":"103","endLine":18,"endColumn":14},{"ruleId":"100","severity":1,"message":"111","line":13,"column":19,"nodeType":"102","messageId":"103","endLine":13,"endColumn":29},{"ruleId":"100","severity":1,"message":"112","line":16,"column":10,"nodeType":"102","messageId":"103","endLine":16,"endColumn":20},{"ruleId":"100","severity":1,"message":"113","line":16,"column":22,"nodeType":"102","messageId":"103","endLine":16,"endColumn":35},{"ruleId":"96","severity":1,"message":"114","line":68,"column":6,"nodeType":"98","endLine":68,"endColumn":8,"suggestions":"115","suppressions":"116"},{"ruleId":"89","severity":1,"message":"90","line":180,"column":30,"nodeType":"91","messageId":"92","endLine":180,"endColumn":32,"suppressions":"117"},{"ruleId":"89","severity":1,"message":"94","line":189,"column":27,"nodeType":"91","messageId":"92","endLine":189,"endColumn":29,"suppressions":"118"},"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["119"],"Array.prototype.map() expects a value to be returned at the end of arrow function.",["120"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'favFlag', 'smoothie.liked_by', and 'token'. Either include them or remove the dependency array.","ArrayExpression",["121"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'profilInfo'. Either include it or remove the dependency array.",["122"],"'category_logo' is assigned a value but never used.","'fromError' is assigned a value but never used.","'setFormError' is assigned a value but never used.","'recepie' is assigned a value but never used.","'setOrderBy' is assigned a value but never used.","'foundUsers' is assigned a value but never used.","'setFoundUsers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'orderBy'. Either include it or remove the dependency array.",["123"],["124"],["125"],["126"],{"kind":"127","justification":"128"},{"kind":"127","justification":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"kind":"127","justification":"128"},{"kind":"127","justification":"128"},{"kind":"127","justification":"128"},"directive","","Update the dependencies array to be: [favFlag, smoothie.liked_by, token]",{"range":"135","text":"136"},"Update the dependencies array to be: [profilInfo]",{"range":"137","text":"138"},"Update the dependencies array to be: [orderBy]",{"range":"139","text":"140"},[1126,1128],"[favFlag, smoothie.liked_by, token]",[1081,1083],"[profilInfo]",[2126,2128],"[orderBy]"]