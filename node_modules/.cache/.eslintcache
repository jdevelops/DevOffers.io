[{"C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\index.js":"1","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\App.js":"2","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\Create.js":"3","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\Update.js":"4","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\Home.js":"5","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\config\\supabaseClient.js":"6","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\Login.js":"7","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\SignUp.js":"8","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\Homepage.js":"9","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\Offer.js":"10","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\CreatedOffers.js":"11","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\About.js":"12","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\components\\offerCard.js":"13"},{"size":267,"mtime":1677625133443,"results":"14","hashOfConfig":"15"},{"size":2343,"mtime":1677625133441,"results":"16","hashOfConfig":"15"},{"size":13708,"mtime":1677625133444,"results":"17","hashOfConfig":"15"},{"size":13131,"mtime":1677625133448,"results":"18","hashOfConfig":"15"},{"size":9165,"mtime":1677625133445,"results":"19","hashOfConfig":"15"},{"size":256,"mtime":1677625133442,"results":"20","hashOfConfig":"15"},{"size":1619,"mtime":1677625133446,"results":"21","hashOfConfig":"15"},{"size":1767,"mtime":1677625133447,"results":"22","hashOfConfig":"15"},{"size":1980,"mtime":1677625133446,"results":"23","hashOfConfig":"15"},{"size":4801,"mtime":1677625133447,"results":"24","hashOfConfig":"15"},{"size":12076,"mtime":1677625133445,"results":"25","hashOfConfig":"15"},{"size":1793,"mtime":1677625133444,"results":"26","hashOfConfig":"15"},{"size":6118,"mtime":1677625133441,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"115kv7j",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\index.js",[],[],"C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\App.js",[],[],"C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\Create.js",[],[],"C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\Update.js",["73","74"],[],"import { useParams, useNavigate } from \"react-router-dom\"; // pozwala na użycie Hooka useParam\r\nimport { useEffect, useState } from \"react\";\r\nimport supabase from \"../config/supabaseClient\";\r\nimport Select from \"react-select\";\r\n\r\nconst Update = () => {\r\n  const { id } = useParams(); // na podstawie routingu z app.js przyjmujemy paratmetr id który możemy użyć w obecnym komponencie jako obiekt\r\n  const navigate = useNavigate();\r\n  //Funkcja wywołana podczas załądowania componentu ma\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [company_name, setCompany_Name] = useState(\"\");\r\n  const [description, setMethod] = useState(\"\"); // potencjalnie zmienić na recepie\r\n  const [salary_low, setSalaryLow] = useState(0);\r\n  const [salary_top, setSalaryTop] = useState(10);\r\n  const [position_level, setPosition_Level] = useState(\"Mid\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [url, setUrl] = useState(\"\");\r\n  const [fromError, setFormError] = useState();\r\n  const [inputError, setInputError] = useState(\"false\"); // zmienna obsługująca errory\r\n  const [inputErrordsc, setInputErrordDsc] = useState(\"\"); // zmiena zaiwerajaca opisy errorów\r\n  let link_url = url;\r\n  // UPDATE formularza\r\n  ///REACT SELECT\r\n  const [category, setCategory] = useState(\"\");\r\n  const [category_logo, setCategoryLogo] = useState(\"\");\r\n  const options = [\r\n    { value: \"admin\", label: \"Admin\" },\r\n    { value: \"analytics\", label: \"Analytics\" },\r\n    { value: \"cplus\", label: \"C++\" },\r\n    { value: \"csharp\", label: \"C#\" },\r\n    { value: \"devops\", label: \"Devops\" },\r\n    { value: \"java\", label: \"Java\" },\r\n    { value: \"javascript\", label: \"Javascript\" },\r\n    { value: \"mobile\", label: \"Mobile\" },\r\n    { value: \"php\", label: \"php\" },\r\n    { value: \"pm\", label: \"PM\" },\r\n    { value: \"python\", label: \"Python\" },\r\n    { value: \"ruby\", label: \"Ruby\" },\r\n    { value: \"sql\", label: \"SQL\" },\r\n    { value: \"tester\", label: \"Teseting\" },\r\n    { value: \"ui\", label: \"UX/UI\" },\r\n  ];\r\n  const handleChange = (selectedOption) => {\r\n    setCategory(selectedOption.value);\r\n    let string =\r\n      \"https://lzjwjilirbqiypntnadj.supabase.co/storage/v1/object/public/logos/\" +\r\n      selectedOption.value +\r\n      \".webp\";\r\n    setCategoryLogo(string);\r\n  };\r\n  ////////\r\n  // RADIO INNPUT FOO\r\n  const onOptionChange = (e) => {\r\n    setPosition_Level(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const submitValidation = () => {\r\n      //walidacja danych\r\n      setInputError(\"false\");\r\n      setInputErrordDsc(\"\");\r\n\r\n      //sprawdzanie tytułu\r\n      if (!title || title.length >= 100) {\r\n        alert(\"Sprawdź poprawność formularza\");\r\n\r\n        setInputError(\"title\");\r\n        setInputErrordDsc(\r\n          \"Upewnij się że został wprowadzony tytuł oraz jest on krótszy niż 100 znaków \"\r\n        );\r\n        return 0;\r\n      }\r\n      //sprawdzanie Firmy\r\n      if (!company_name || company_name.length >= 80) {\r\n        alert(\"Sprawdź poprawność formularza\");\r\n        setInputError(\"company_name\");\r\n        setInputErrordDsc(\r\n          \"Upewnij się że została wprowadzona nazwa firmy oraz jest ona krótsza niż 80 znaków \"\r\n        );\r\n        return 0;\r\n      }\r\n      //sprawdzanie Miesjsca pracy\r\n      if (!location || location.length >= 128) {\r\n        alert(\"Błąd, sprawdź poprawność formularza\");\r\n        setInputError(\"location\");\r\n        setInputErrordDsc(\r\n          \"Upewnij się że została wprowadzona miejscowość zatrudnia\"\r\n        );\r\n        return 0;\r\n      }\r\n      //sprawdzanie widełek\r\n      if (salary_low > salary_top || salary_low <= 0 || salary_top <= 0) {\r\n        alert(\"Sprawdź poprawność formularza\");\r\n        setInputError(\"salary\");\r\n        setInputErrordDsc(\r\n          \"Upewnij się że wprowadzone widełki są prawidłowe oraz większe od zera \"\r\n        );\r\n        return 0;\r\n      }\r\n      //sprawdzanie texztarea\r\n      if (\r\n        !description ||\r\n        description.length <= 40 ||\r\n        description.length >= 2500\r\n      ) {\r\n        alert(\"Sprawdź poprawność formularza\");\r\n        setInputError(\"description\");\r\n        setInputErrordDsc(\r\n          \"Upewnij się że opis jest wprowadzony i zawiera przynajmniej 40 znaków \"\r\n        );\r\n        return 0;\r\n      }\r\n      //sprawdzanie linku\r\n      if (\r\n        !link_url ||\r\n        (link_url.startsWith(\"https://\") === false &&\r\n          link_url.startsWith(\"http://\") === false) ||\r\n        link_url.length >= 1000\r\n      ) {\r\n        alert(\"Sprawdź poprawność formularza\");\r\n        setInputError(\"link\");\r\n        setInputErrordDsc(\r\n          \"Proszę wprowadzić pełny link zaczynający się od http:// lub https:// \"\r\n        );\r\n        return 0;\r\n      } else {\r\n        return 1;\r\n      }\r\n    };\r\n    if (submitValidation() === 1) {\r\n      console.log(\"debug\");\r\n      // wywołanie funkcji w ifie\r\n      const { data, error } = await supabase\r\n        .from(\"offers\") // wyszukuje z supabase tabli o nazwie \"offers\"\r\n        .update([\r\n          {\r\n            title,\r\n            company_name,\r\n            category,\r\n            category_logo,\r\n            description,\r\n            location,\r\n            link_url,\r\n            position_level,\r\n            salary_low,\r\n            salary_top,\r\n          },\r\n        ])\r\n        .eq(\"id\", id)\r\n        .select();\r\n\r\n      // wprowadza do tabeli tablice z obiektami, każdy obiekt to jedna linijka w tabeli\r\n      if (data) {\r\n        alert(\"Dodano ogłoszenie \");\r\n        navigate(\"/\");\r\n      }\r\n      if (error) {\r\n        console.log(\"Error po stronie Supabase\");\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchOffer = async () => {\r\n      const { data, error } = await supabase\r\n        .from(\"offers\") // pobranie z tabeli\r\n        .select() // zwracanie daty\r\n        .eq(\"id\", id) //linijka odpowiedzialna za filtrowanie zwraca jeżeli kolumna \"id\" jest równa zmiennej id\r\n        .single();\r\n\r\n      if (error) {\r\n        navigate(\"/\", { replace: true }); // replace true zamienia ostatnia strone w histori na strone główną\r\n      }\r\n      if (data) {\r\n        setTitle(data.title);\r\n        setCompany_Name(data.company_name);\r\n        setMethod(data.description);\r\n        setUrl(data.link_url);\r\n        setPosition_Level(data.position_level);\r\n        setSalaryLow(data.salary_low);\r\n        setSalaryTop(data.salary_top);\r\n        setLocation(data.location);\r\n        setCategory(data.category);\r\n      }\r\n    };\r\n    fetchOffer(); // invoke funkcji na koniec parsowaniaHooka\r\n  }, [id, navigate]);\r\n\r\n  return (\r\n    <div className=\"page update\">\r\n      <h2>ZAKTUALIZUJ OGŁOSZENIE</h2>\r\n      <form className=\"update_form\" onSubmit={handleSubmit}>\r\n        {/* wstawić onSubmit={handleSubmit} */}\r\n        <label htmlFor=\"title\">Tytuł: </label>{\" \"}\r\n        <span className=\"error_dsc\">\r\n          {inputError === \"title\" ? inputErrordsc : \"\"}\r\n        </span>\r\n        {/* to tworzy label który jest wyświetlany na stronie  */}\r\n        <input\r\n          className={inputError === \"title\" ? \"error_border\" : \"\"}\r\n          type=\"text\"\r\n          id=\"title\"\r\n          value={title /* wartość inputu przechowywana w Hooku useState*/}\r\n          onChange={(e) => {\r\n            setTitle(e.target.value);\r\n            setInputError(\"\");\r\n            setInputErrordDsc(\"\");\r\n          }}\r\n          placeholder=\"np. Java Fullstack Developer\"\r\n        />\r\n        {/* Reactowy event handler który reaguje w momencie zmiany value danego elementu, w tym wypadku input*/}\r\n        <span>Katergoria:</span>\r\n        <Select\r\n          placeholder=\"Wybierz kategorie...\"\r\n          selectedOption={category}\r\n          options={options}\r\n          className=\"update_select\"\r\n          onChange={handleChange}\r\n        />\r\n        <label htmlFor=\"company_name\">Firma zatrudniająca:</label>\r\n        <span className=\"error_dsc\">\r\n          {inputError === \"company_name\" ? inputErrordsc : \"\"}\r\n        </span>\r\n        <input\r\n          className={inputError === \"company_name\" ? \"error_border\" : \"\"}\r\n          type=\"text\"\r\n          id=\"company_name\"\r\n          value={company_name}\r\n          onChange={(e) => {\r\n            setCompany_Name(e.target.value);\r\n            setInputError(\"\");\r\n            setInputErrordDsc(\"\");\r\n          }}\r\n          placeholder=\"CD Project Red\"\r\n        />\r\n        <label htmlFor=\"location\">Miejscowość Firmy/Zatrudnienia:</label>\r\n        <span className=\"error_dsc\">\r\n          {inputError === \"location\" ? inputErrordsc : \"\"}\r\n        </span>\r\n        <input\r\n          className={inputError === \"location\" ? \"error_border\" : \"\"}\r\n          type=\"text\"\r\n          id=\"location\"\r\n          value={location}\r\n          onChange={(e) => {\r\n            setLocation(e.target.value);\r\n            setInputError(\"\");\r\n            setInputErrordDsc(\"\");\r\n          }}\r\n          placeholder=\"Warszawa\"\r\n        />\r\n        <div>\r\n          <h3>Poziom Stanowiska</h3>\r\n          <div className=\"update_radios\">\r\n            <div>\r\n              <label htmlFor=\"staż\">Intern</label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"position_level\"\r\n                value=\"intern\"\r\n                id=\"staż\"\r\n                checked={position_level === \"intern\"}\r\n                onChange={onOptionChange}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"junior\">Junior</label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"position_level\"\r\n                id=\"junior\"\r\n                value=\"Junior\"\r\n                checked={position_level === \"Junior\"}\r\n                onChange={onOptionChange}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"mid\">Mid</label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"position_level\"\r\n                id=\"mid\"\r\n                value=\"Mid\"\r\n                checked={position_level === \"Mid\"}\r\n                onChange={onOptionChange}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"senior\">Senior</label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"position_level\"\r\n                id=\"senior\"\r\n                value=\"Senior\"\r\n                checked={position_level === \"Senior\"}\r\n                onChange={onOptionChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <h3 className=\"update_salary_dsc\">Zarobki</h3>\r\n        <span className=\"error_dsc\">\r\n          {inputError === \"salary\" ? inputErrordsc : \"\"}\r\n        </span>\r\n        <div className=\"update_salary\">\r\n          <div>\r\n            <label htmlFor=\"salaryLow\">Od:</label>\r\n            <input\r\n              className={inputError === \"salary\" ? \"error_border\" : \"\"}\r\n              type=\"number\"\r\n              id=\"salaryLow\"\r\n              value={salary_low}\r\n              onChange={(e) => {\r\n                setSalaryLow(parseInt(e.target.value));\r\n                setInputError(\"\");\r\n                setInputErrordDsc(\"\");\r\n              }}\r\n            />\r\n            PLN\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"salaryTop\">Do:</label>\r\n            <input\r\n              className={inputError === \"salary\" ? \"error_border\" : \"\"}\r\n              type=\"number\"\r\n              id=\"salaryTop\"\r\n              value={salary_top}\r\n              onChange={(e) => {\r\n                setSalaryTop(parseInt(e.target.value));\r\n                setInputError(\"\");\r\n                setInputErrordDsc(\"\");\r\n              }}\r\n            />\r\n            PLN\r\n          </div>\r\n        </div>\r\n        <label htmlFor=\"description\">Opis:</label>\r\n        <span className=\"error_dsc\">\r\n          {inputError === \"description\" ? inputErrordsc : \"\"}\r\n        </span>\r\n        <textarea\r\n          rows=\"20\"\r\n          className={\r\n            inputError === \"description\"\r\n              ? \"update_textarea error_border\"\r\n              : \"update_textarea\"\r\n          }\r\n          id=\"description\"\r\n          value={description}\r\n          onChange={(e) => {\r\n            setMethod(e.target.value);\r\n            setInputError(\"\");\r\n            setInputErrordDsc(\"\");\r\n          }}\r\n          placeholder=\"Opis Stanowiska\"\r\n        />\r\n        <label htmlFor=\"url\">Link do Formularza zgłoszeniowego</label>\r\n        <span className=\"error_dsc\">\r\n          {inputError === \"link\" ? inputErrordsc : \"\"}\r\n        </span>\r\n        <input\r\n          className={inputError === \"link\" ? \"error_border\" : \"\"}\r\n          type=\"text\"\r\n          id=\"url\"\r\n          value={url}\r\n          onChange={(e) => {\r\n            setUrl(e.target.value);\r\n            setInputError(\"\");\r\n            setInputErrordDsc(\"\");\r\n          }}\r\n          placeholder=\"https://twojastrona.pl\"\r\n        />\r\n        <button>Zatwierdź </button>\r\n        {/*linijka pozwalająca wyrzucić error zamiast formularza, warunek if formError === true*/}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Update;\r\n","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\Home.js",["75"],["76","77"],"/* eslint-disable array-callback-return */\r\nimport supabase from \"../config/supabaseClient\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n// components\r\n\r\nimport OfferCard from \"../components/offerCard\";\r\n\r\nconst Home = ({ token }) => {\r\n  const [fetchError, setFetchError] = useState(null); // miejsce przechowywania danych  Tzw. State Reacta\r\n  const [offers, setOffers] = useState(null); // miejsce przechowywania danych  Tzw. State Reacta\r\n  const [orderLocaly, setOrderLocaly] = useState(\"domyślne\");\r\n  const [favFlag, setFavFlag] = useState(false);\r\n  const [orderAscd, setOrderAscd] = useState(true);\r\n  const [query, setQuery] = useState(\"\"); // zmienna przechowująca string do wyszukania\r\n  let zmiennaEffect = \"none\";\r\n\r\n  const orderBy = \"created_at\"; // zmienna wskazująca na jakiej podstawie fetch sortuje dane\r\n  //Funkcja usuwająca wpis lokalnie\r\n  const handleDelete = (id) => {\r\n    setOffers((pervOffers) => {\r\n      return pervOffers.filter((sm) => sm.id !== id);\r\n    });\r\n  };\r\n  //Funcjka sortująca\r\n  function handleSortEffect(e) {\r\n    //setSortEffect(e.target.id);\r\n    zmiennaEffect = e.target.id;\r\n    switch (zmiennaEffect) {\r\n      case \"az\":\r\n        e.target.classList.add(\"searchbar--active\");\r\n        break;\r\n      case \"data\":\r\n        e.target.classList.add(\"searchbar--active\");\r\n        break;\r\n      case \"salary\":\r\n        e.target.classList.add(\"searchbar--active\");\r\n        break;\r\n      default:\r\n        console.log(\"none1\");\r\n    }\r\n  }\r\n\r\n  //funkcja fetchujaca dane z database\r\n  useEffect(() => {\r\n    const fetchOffers = async () => {\r\n      const { data, error } = await supabase\r\n        .from(\"offers\")\r\n        .select()\r\n        .order(orderBy, { ascending: false });\r\n\r\n      if (error) {\r\n        setFetchError(\"Can't fetch\");\r\n        setOffers(null);\r\n        console.log(error, fetchError);\r\n      }\r\n      if (data) {\r\n        console.log(data);\r\n        setOffers(data);\r\n        setFetchError(null);\r\n      }\r\n    };\r\n\r\n    fetchOffers();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      {/*Wrapper*/}\r\n      <div className=\"home\">\r\n        <h1 className=\"home__title\">OFERTY</h1>\r\n        {fetchError && <p>{fetchError}</p>}\r\n        {offers && (\r\n          <div className=\"offers\">\r\n            {/*debug */}\r\n            <div className=\"debug hidden\">\r\n              <button\r\n                onClick={() => {\r\n                  console.log(\"found offers: \");\r\n                  console.log(offers);\r\n                }}\r\n              >\r\n                DEBUG\r\n              </button>\r\n            </div>\r\n\r\n            {/*Search/sort bar */}\r\n            <div className=\"searchbar\">\r\n              {/*Search input */}\r\n              <div className=\"searchbar_search\">\r\n                <input\r\n                  onChange={(event) => setQuery(event.target.value)}\r\n                  placeholder=\"WYSZUKAJ\"\r\n                />\r\n              </div>\r\n\r\n              {/*OPCJE SORTOWANIA  */}\r\n              <div className=\"searchbar_sort\">\r\n                <button\r\n                  id=\"data\"\r\n                  onClick={(obj) => {\r\n                    handleSortEffect(obj);\r\n                    offers.sort(function (a, b) {\r\n                      const dateA = a.created_at;\r\n                      const dateB = b.created_at;\r\n                      if (dateA > dateB) {\r\n                        return -1;\r\n                      }\r\n                      if (dateA < dateB) {\r\n                        return 1;\r\n                      }\r\n                      return 0;\r\n                    });\r\n                    if (orderAscd) {\r\n                      setOffers(offers.reverse());\r\n                      setOrderLocaly(\"Najstarsze najpierw \");\r\n                      setOrderAscd(!orderAscd);\r\n                    } else if (!orderAscd) {\r\n                      setOrderLocaly(\"Najnowsze najpierw\");\r\n                      setOffers(offers);\r\n                      setOrderAscd(!orderAscd);\r\n                    }\r\n                  }}\r\n                >\r\n                  DATA\r\n                </button>\r\n\r\n                <button\r\n                  id=\"az\"\r\n                  onClick={(obj) => {\r\n                    handleSortEffect(obj);\r\n                    offers.sort(function (a, b) {\r\n                      const nameA = a.title.toUpperCase(); // ignore upper and lowercase\r\n                      const nameB = b.title.toUpperCase(); // ignore upper and lowercase\r\n                      if (nameA > nameB) {\r\n                        return -1;\r\n                      }\r\n                      if (nameA < nameB) {\r\n                        return 1;\r\n                      }\r\n                      // names must be equal\r\n                      return 0;\r\n                    });\r\n                    if (orderAscd) {\r\n                      setOffers(offers.reverse());\r\n                      setOrderLocaly(\"Alfabetycznie rosnoąco\");\r\n                      setOrderAscd(!orderAscd);\r\n                    } else if (!orderAscd) {\r\n                      setOrderLocaly(\"Alfabetycznie malejąco\");\r\n                      setOffers(offers);\r\n                      setOrderAscd(!orderAscd);\r\n                    }\r\n                  }}\r\n                >\r\n                  A-Z\r\n                </button>\r\n                <button\r\n                  id=\"salary\"\r\n                  onClick={(obj) => {\r\n                    handleSortEffect(obj);\r\n                    console.log(obj);\r\n                    offers.sort(function (a, b) {\r\n                      const salaryRangeA = (a.salary_low + a.salary_top) / 2;\r\n                      const salaryRangeB = (b.salary_low + b.salary_top) / 2;\r\n                      if (salaryRangeA < salaryRangeB) {\r\n                        return 1;\r\n                      }\r\n                      if (salaryRangeA > salaryRangeB) {\r\n                        return -1;\r\n                      }\r\n                      return 0;\r\n                    });\r\n                    if (orderAscd) {\r\n                      setOffers(offers.reverse());\r\n                      setOrderLocaly(\"widełki rosnąco\");\r\n                      setOrderAscd(!orderAscd);\r\n                    } else if (!orderAscd) {\r\n                      setOffers(offers);\r\n                      setOrderLocaly(\"widełki malejąco\");\r\n                      setOrderAscd(!orderAscd);\r\n                    }\r\n                  }}\r\n                >\r\n                  STAWKA\r\n                </button>\r\n                <p className=\"searchbar_dsc\">\r\n                  Obecne sortowanie: {orderLocaly}\r\n                </p>\r\n              </div>\r\n\r\n              {/*przycisk ulubionych  */}\r\n              <div className=\"searchbar_liked\">\r\n                {token.user && (\r\n                  <button\r\n                    onClick={() => {\r\n                      setFavFlag(!favFlag);\r\n                    }}\r\n                  >\r\n                    ULUBIONE\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/*WYSWIETLANIE POSTÓW Z FILTREM I SORTOWANIEM */}\r\n            <div className=\"offers_list\">\r\n              {offers\r\n                .filter((post) => {\r\n                  if (query === \"\") {\r\n                    return post;\r\n                  } else if (\r\n                    post.title.toLowerCase().includes(query.toLowerCase())\r\n                  ) {\r\n                    return post;\r\n                  }\r\n                })\r\n                .map((post) => {\r\n                  if (favFlag) {\r\n                    if (post.liked_by.includes(token.user.id)) {\r\n                      return (\r\n                        <OfferCard\r\n                          key={post.id}\r\n                          offer={post}\r\n                          onDeleteProp={handleDelete}\r\n                          token={token}\r\n                        />\r\n                      );\r\n                    }\r\n                  } else {\r\n                    return (\r\n                      <OfferCard\r\n                        key={post.id}\r\n                        offer={post}\r\n                        onDeleteProp={handleDelete}\r\n                        token={token}\r\n                      />\r\n                    );\r\n                  }\r\n                })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n/*  STARA FUNKCJA WYSZUKUJĄCA\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setSearchInput(e.target.value);\r\n  };\r\n\r\n  if (searchInput.length > 0) {\r\n    offers.filter((offer) => {\r\n      return offer.title.match(searchInput);\r\n    });\r\n  }\r\n  /// */\r\n\r\n/*\r\n            /*FILTER WITH FETCH /// SCRAP THAT \r\n          <div className=\"order-by\">\r\n            <p>Order by:</p>\r\n            <button onClick={() => setOrderBy(\"created_at\")}>\r\n              Time Created\r\n            </button>\r\n            <button onClick={() => setOrderBy(\"title\")}>Title</button>\r\n            <button onClick={() => setOrderBy(\"rating\")}>rating</button>\r\n            {orderBy}\r\n          </div>\r\n*/\r\n","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\config\\supabaseClient.js",[],[],"C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\Login.js",[],[],"C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\SignUp.js",["78"],[],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport supabase from \"../config/supabaseClient\";\r\n\r\nconst SignUp = () => {\r\n  // przechowywanie danych ionputu\r\n  const [formData, setFormData] = useState({\r\n    fullName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  // Obsługa inputu\r\n  function handleChange(event) {\r\n    setFormData((prevFormData) => {\r\n      return {\r\n        ...prevFormData,\r\n        [event.target.name]: event.target.value,\r\n      };\r\n    });\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const { data, error } = await supabase.auth.signUp({\r\n        email: formData.email,\r\n        password: formData.password,\r\n        options: {\r\n          data: {\r\n            full_name: formData.fullName,\r\n          },\r\n        },\r\n      });\r\n      if (error) throw error;\r\n      alert(\"Check your email for verification link\");\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"login__title\">Zarejestruj się</h1>\r\n      <form className=\"login_form\" onSubmit={handleSubmit}>\r\n        <input\r\n          placeholder=\"Nazwa użytkownika\"\r\n          name=\"fullName\"\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <input placeholder=\"Email\" name=\"email\" onChange={handleChange} />\r\n\r\n        <input\r\n          placeholder=\"Hasło\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <button type=\"submit\">Zarejestruj się </button>\r\n      </form>\r\n      <div className=\"login_footer\">\r\n        <span>\r\n          Posiadasz już konto? <Link to=\"/Login\">Zaloguj się </Link>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\Homepage.js",["79","80"],[],"import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport supabase from \"../config/supabaseClient\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Homepage = ({ token }) => {\r\n  const [createDate, setCreateDate] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  let navigate = useNavigate();\r\n\r\n  const profilInfo = () => {\r\n    setCreateDate(token.user.created_at.substring(0, 10));\r\n    let emailArr = token.user.email.split(\"\");\r\n    for (let i = 0; i < 5; i++) {\r\n      emailArr[i + 3] = \"*\";\r\n    }\r\n    let x = emailArr.join(\"\");\r\n    setEmail(x);\r\n  };\r\n  //funkcja sprawdzajaca id przy ponownym fetchu\r\n  async function checkID() {\r\n    const {\r\n      data: { user },\r\n    } = await supabase.auth.getUser();\r\n    //console.log(user);\r\n  }\r\n\r\n  //funkcja logout\r\n  function handleLogout() {\r\n    sessionStorage.removeItem(\"token\");\r\n    supabase.auth.signOut();\r\n    token = false;\r\n    localStorage.clear();\r\n    navigate(\"/\", { token });\r\n    window.location.reload(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    profilInfo();\r\n  }, []);\r\n  return (\r\n    <div className=\"page\">\r\n      <h1 className=\"login__title\">Profil</h1>\r\n      <div className=\"profile_card\">\r\n        <img\r\n          className=\"profile_img\"\r\n          src=\"https://lzjwjilirbqiypntnadj.supabase.co/storage/v1/object/public/logos/user.webp\"\r\n          alt=\"profile_picture\"\r\n        />\r\n        <h3>Witaj, {token.user.user_metadata.full_name}</h3>\r\n        <ul>\r\n          <li>Profil utworzono: {createDate}</li>\r\n          <li>Adres mailowy: {email}</li>\r\n        </ul>\r\n        <div className=\"profile_footer\">\r\n          <button className=\"hidden\" onClick={checkID}>\r\n            Check uuid\r\n          </button>\r\n          <Link to=\"/CreatedOffers\">Twoje oferty</Link>\r\n\r\n          <button onClick={handleLogout}>Wyloguj się</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\Offer.js",["81","82","83"],[],"import { useParams, useNavigate } from \"react-router-dom\"; // pozwala na użycie Hooka useParam\r\nimport { useEffect, useState } from \"react\";\r\nimport supabase from \"../config/supabaseClient\";\r\n\r\nconst Offer = () => {\r\n  const { id } = useParams(); // na podstawie routingu z app.js przyjmujemy paratmetr id który możemy użyć w obecnym komponencie jako obiekt\r\n  const navigate = useNavigate();\r\n  //Funkcja wywołana podczas załądowania componentu ma\r\n  const [title, setTitle] = useState(\"\");\r\n  const [company_name, setCompany_Name] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [description, setMethod] = useState(\"\"); // potencjalnie zmienić na recepie\r\n  const [url, setUrl] = useState(\"\");\r\n  const [data, setData] = useState(\"\");\r\n  const [salary_low, setSalaryLow] = useState(0);\r\n  const [salary_top, setSalaryTop] = useState(10);\r\n  const [position_level, setPosition_Level] = useState(\"Mid\");\r\n  const [category_logo, setCategoryLogo] = useState(\"\");\r\n  const [fromError, setFormError] = useState(null);\r\n\r\n  const redirectFoo = () => {\r\n    window.open(url, \"_blank\");\r\n  };\r\n\r\n  //Inicjalizacja daty\r\n  const time = new Date();\r\n  // FUNKCJA OBLICZAJĄCA CZAS OD DODANIA { KALKULACJA W MINUTACH}\r\n  function timeCalc() {\r\n    let createdTime =\r\n      parseInt(data.slice(0, 4)) * 8760 +\r\n      parseInt(data.slice(5, 7)) * 720 +\r\n      parseInt(data.slice(8, 10)) * 24;\r\n    let currentTime =\r\n      time.getFullYear() * 8760 +\r\n      (time.getMonth() + 1) * 720 +\r\n      time.getDate() * 24;\r\n    //funkcja zwraca skonfigurowanego strniga\r\n    let timeDif = currentTime - createdTime;\r\n    let outputValue;\r\n\r\n    if (timeDif <= 48) {\r\n      outputValue = \"NOWE\";\r\n    } else if (timeDif > 48) {\r\n      outputValue = \"DODANO \" + timeDif / 24 + \" DNI TEMU\";\r\n    } else {\r\n      outputValue = \"error\";\r\n    }\r\n    return outputValue;\r\n  }\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    const fetchOffers = async () => {\r\n      const { data, error } = await supabase\r\n        .from(\"offers\") // pobranie z tabeli\r\n        .select() // zwracanie daty\r\n        .eq(\"id\", id) //linijka odpowiedzialna za filtrowanie zwraca jeżeli kolumna \"id\" jest równa zmiennej id\r\n        .single();\r\n\r\n      if (error) {\r\n        navigate(\"/\", { replace: true }); // replace true zamienia ostatnia strone w histori na strone główną\r\n      }\r\n      if (data) {\r\n        setTitle(data.title);\r\n        setMethod(data.description);\r\n        setUrl(data.link_url);\r\n        setCompany_Name(data.company_name);\r\n        setSalaryLow(data.salary_low);\r\n        setSalaryTop(data.salary_top);\r\n        setLocation(data.location);\r\n        setPosition_Level(data.position_level);\r\n        setCategoryLogo(data.category_logo);\r\n        setData(data.created_at);\r\n        //console.log(data);\r\n      }\r\n      /* MOZE ZOSTANIE UŻYTE\r\n      function helperFoo(d, e) {\r\n        if (d !== null) {\r\n          console.log(d, e);\r\n          console.log(\"data is not null\");\r\n        } else if (e !== null) {\r\n          console.log(d, e);\r\n          console.log(\"error is not null\");\r\n          navigate(\"/\", { replace: true });\r\n        } else {\r\n          console.log(d, e);\r\n          console.log(\"idk what happend\");\r\n        }\r\n      }\r\n      helperFoo(data, error);\r\n      */\r\n    };\r\n    fetchOffers(); // invoke funkcji na koniec parsowaniaHooka\r\n  }, [id, navigate]);\r\n\r\n  return (\r\n    <div className=\"page offer-view\">\r\n      <div className=\"offer-view_wrapper\">\r\n        <div className=\"offer-view_header\">\r\n          <h2>{title.toUpperCase()}</h2>\r\n        </div>\r\n        <div className=\"offer-view_topsection\">\r\n          <div>\r\n            {/*Style pożyczone z card */}\r\n            <p className=\"offer_main-company\">\r\n              <i className=\"material-icons offer-icon\">business</i>\r\n              {company_name.toUpperCase()}\r\n            </p>\r\n            <p className=\"offer_main-location\">\r\n              <i className=\"material-icons offer-icon\">place</i>\r\n              {location.toUpperCase()}\r\n            </p>\r\n            <p className=\"offer-view_level\">Poziom: {position_level}</p>\r\n          </div>\r\n          <div>\r\n            <p className=\"offer-view_time\">{timeCalc()}</p>\r\n            <p className=\"offer-view_salary\">\r\n              {salary_low} - {salary_top} PLN\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"offer-view_wrapper\">\r\n        <div className=\"offer-view_header\">\r\n          <h2>OPIS STANOWISKA</h2>\r\n        </div>\r\n        <pre>\r\n          <p>{description}</p>\r\n        </pre>\r\n        <div className=\"break\"></div>\r\n        <button className=\"update_btn\" onClick={redirectFoo}>\r\n          APLIKUJ\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Offer;\r\n","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\CreatedOffers.js",["84","85","86"],["87","88","89"],"/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable array-callback-return */\r\nimport supabase from \"../config/supabaseClient\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n// components\r\n\r\nimport OfferCard from \"../components/offerCard\";\r\n\r\nconst CreatedOffers = ({ token }) => {\r\n  const [fetchError, setFetchError] = useState(null); // Fetch error, zmienna\r\n  const [offers, setOffers] = useState(null); // główna baza\r\n  const [orderBy, setOrderBy] = useState(\"created_at\"); // created_at jest nazwa kolumny w bazie\r\n  const [orderLocaly, setOrderLocaly] = useState(\"Sortowanie \");\r\n  const [orderAscd, setOrderAscd] = useState(true);\r\n  const [foundUsers, setFoundUsers] = useState(\"\");\r\n  const [query, setQuery] = useState(\"\");\r\n  let zmiennaEffect = \"none\";\r\n\r\n  //Funkcja usuwająca wpis lokalnie\r\n  const handleDelete = (id) => {\r\n    setOffers((pervOffers) => {\r\n      return pervOffers.filter((sm) => sm.id !== id);\r\n    });\r\n  };\r\n  //Funcjka sortująca\r\n  function handleSortEffect(e) {\r\n    //setSortEffect(e.target.id);\r\n    zmiennaEffect = e.target.id;\r\n    switch (zmiennaEffect) {\r\n      case \"az\":\r\n        e.target.classList.add(\"searchbar--active\");\r\n        break;\r\n      case \"data\":\r\n        e.target.classList.add(\"searchbar--active\");\r\n        break;\r\n      case \"salary\":\r\n        e.target.classList.add(\"searchbar--active\");\r\n        break;\r\n      default:\r\n        console.log(\"none1\");\r\n    }\r\n  }\r\n\r\n  //funkcja fetchujaca dane z database\r\n  useEffect(() => {\r\n    const fetchOffers = async () => {\r\n      const { data, error } = await supabase\r\n        .from(\"offers\")\r\n        .select()\r\n        .order(orderBy, { ascending: false }); // const { data, error } -> destrukturyzacja obiektu po lewej\r\n\r\n      if (error) {\r\n        setFetchError(\"Can;t fetch \");\r\n        setOffers(null);\r\n        console.log(error);\r\n      }\r\n      if (data) {\r\n        setOffers(data);\r\n        setFetchError(null);\r\n      }\r\n    };\r\n\r\n    fetchOffers();\r\n  }, []); //[orderBy] powoduje wywołanie Hooka useEffect za każdym użyciem orderby // brak tylko pojedyncze wywołanie\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      {/*Wrapper*/}\r\n      <div className=\"home\">\r\n        <h1 className=\"home__title\">Twoje Oferty</h1>\r\n        {fetchError && <p>{fetchError}</p>}\r\n        {offers && (\r\n          <div className=\"offers\">\r\n            {/*Search/sort bar */}\r\n            <div className=\"searchbar\">\r\n              {/*Search input */}\r\n              <div className=\"searchbar_search\">\r\n                <input\r\n                  onChange={(event) => setQuery(event.target.value)}\r\n                  placeholder=\"WYSZUKAJ\"\r\n                />\r\n              </div>\r\n\r\n              {/*OPCJE SORTOWANIA  */}\r\n              <div className=\"searchbar_sort\">\r\n                <button\r\n                  id=\"data\"\r\n                  onClick={(obj) => {\r\n                    handleSortEffect(obj);\r\n                    offers.sort(function (a, b) {\r\n                      const dateA = a.created_at;\r\n                      const dateB = b.created_at;\r\n                      if (dateA > dateB) {\r\n                        return -1;\r\n                      }\r\n                      if (dateA < dateB) {\r\n                        return 1;\r\n                      }\r\n                      return 0;\r\n                    });\r\n                    if (orderAscd) {\r\n                      setOffers(offers.reverse());\r\n                      setOrderLocaly(\"Najstarsze najpierw \");\r\n                      setOrderAscd(!orderAscd);\r\n                    } else if (!orderAscd) {\r\n                      setOrderLocaly(\"Najnowsze najpierw\");\r\n                      setOffers(offers);\r\n                      setOrderAscd(!orderAscd);\r\n                    }\r\n                  }}\r\n                >\r\n                  DATA\r\n                </button>\r\n\r\n                <button\r\n                  id=\"az\"\r\n                  onClick={(obj) => {\r\n                    handleSortEffect(obj);\r\n                    offers.sort(function (a, b) {\r\n                      const nameA = a.title.toUpperCase(); // ignore upper and lowercase\r\n                      const nameB = b.title.toUpperCase(); // ignore upper and lowercase\r\n                      if (nameA > nameB) {\r\n                        return -1;\r\n                      }\r\n                      if (nameA < nameB) {\r\n                        return 1;\r\n                      }\r\n                      // names must be equal\r\n                      return 0;\r\n                    });\r\n                    if (orderAscd) {\r\n                      setOffers(offers.reverse());\r\n                      setOrderLocaly(\"Alfabetycznie rosnoąco\");\r\n                      setOrderAscd(!orderAscd);\r\n                    } else if (!orderAscd) {\r\n                      setOrderLocaly(\"Alfabetycznie malejąco\");\r\n                      setOffers(offers);\r\n                      setOrderAscd(!orderAscd);\r\n                    }\r\n                  }}\r\n                >\r\n                  A-Z\r\n                </button>\r\n                <button\r\n                  id=\"salary\"\r\n                  onClick={(obj) => {\r\n                    handleSortEffect(obj);\r\n                    offers.sort(function (a, b) {\r\n                      const salaryRangeA = (a.salary_low + a.salary_top) / 2;\r\n                      const salaryRangeB = (b.salary_low + b.salary_top) / 2;\r\n                      if (salaryRangeA < salaryRangeB) {\r\n                        return 1;\r\n                      }\r\n                      if (salaryRangeA > salaryRangeB) {\r\n                        return -1;\r\n                      }\r\n                      return 0;\r\n                    });\r\n                    if (orderAscd) {\r\n                      setOffers(offers.reverse());\r\n                      setOrderLocaly(\"widełki rosnoąco\");\r\n                      setOrderAscd(!orderAscd);\r\n                    } else if (!orderAscd) {\r\n                      setOffers(offers);\r\n                      setOrderLocaly(\"widełki malejąco\");\r\n                      setOrderAscd(!orderAscd);\r\n                    }\r\n                  }}\r\n                >\r\n                  STAWKA\r\n                </button>\r\n                <p className=\"searchbar_dsc\">\r\n                  Obecne sortowanie: {orderLocaly}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            {/*WYSWIETLANIE POSTÓW Z FILTREM I SORTOWANIEM  */}\r\n            <div className=\"offers_list\">\r\n              {offers\r\n                .filter((post) => {\r\n                  if (query === \"\") {\r\n                    return post;\r\n                  } else if (\r\n                    post.title.toLowerCase().includes(query.toLowerCase())\r\n                  ) {\r\n                    return post;\r\n                  }\r\n                })\r\n                .map((post) => {\r\n                  if (post.created_by === token.user.id) {\r\n                    return (\r\n                      <OfferCard\r\n                        key={post.id}\r\n                        offer={post}\r\n                        onDeleteProp={handleDelete}\r\n                        token={token}\r\n                      />\r\n                    );\r\n                  }\r\n                })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatedOffers;\r\n/*  INSERT IN 219 LINE IF YOU WANT TO BACKUP OLD SHOW METHOD \r\n\r\n          <div className=\"offer-grid\">\r\n            {offers.map((offer) => (\r\n              //<p>{offer.title}</p> //\r\n              <SmoothieCard\r\n                key={offer.id}\r\n                offer={offer}\r\n                onDeleteProp={handleDelete}\r\n              /> //offer={offer} -> offer jest to prop do którego przekazujemy zmienna offer tak jak w Svelte\r\n            ))}\r\n          </div>\r\n\r\n\r\n*/\r\n\r\n/*     SHOW FOO \r\n\r\n<div className=\"offer-grid\">\r\n            foo2\r\n            {foundUsers && foundUsers.length > 0 ? (\r\n              foundUsers.map((foundSmoothies) => {\r\n                if (foundSmoothies.created_by === token.user.id) {\r\n                  return (\r\n                    <SmoothieCard\r\n                      key={foundSmoothies.id}\r\n                      offer={foundSmoothies}\r\n                      onDeleteProp={handleDelete}\r\n                      token={token}\r\n                    />\r\n                  );\r\n                }\r\n              })\r\n            ) : (\r\n              <h1>Nic nie znaleziono </h1>\r\n            )}\r\n            ;\r\n          </div> */\r\n\r\n/*  SHOW FOO V3\r\n          <div className=\"offer-grid\">\r\n            foo3\r\n            {offers.map((offer) => {\r\n              if (offer.created_by === token.user.id) {\r\n                return (\r\n                  <SmoothieCard\r\n                    key={offer.id}\r\n                    offer={offer}\r\n                    onDeleteProp={handleDelete}\r\n                  />\r\n                );\r\n              }\r\n            })}\r\n          </div> */\r\n/*        FILTER WITH FETCH /// SCRAP THAT \r\n          <div className=\"order-by\">\r\n            <p>Order by:</p>\r\n            <button onClick={() => setOrderBy(\"created_at\")}>\r\n              Time Created\r\n            </button>\r\n            <button onClick={() => setOrderBy(\"title\")}>Title</button>\r\n            <button onClick={() => setOrderBy(\"rating\")}>rating</button>\r\n            {orderBy}\r\n          </div>\r\n          */\r\n\r\n/*PIERWOWZÓR SEARCH BARA\r\n                        <div className=\"user-list\">\r\n              {foundUsers && foundUsers.length > 0 ? (\r\n                foundUsers.map((offers) => (\r\n                  <li key={offers.id} className=\"user\">\r\n                    <span className=\"user-id\">{offers.id}</span>\r\n                    <span className=\"user-name\">{offers.title}</span>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <h1>No results found!</h1>\r\n              )}\r\n            </div>\r\n            */\r\n\r\n/*V2 SEARCH BAR\r\n          \r\n           <div>\r\n            SEARCH:\r\n            <input\r\n              type=\"search\"\r\n              value={name}\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n                filter();\r\n              }}\r\n              className=\"input\"\r\n              placeholder=\"Filter\"\r\n            />\r\n          </div>\r\n          */\r\n\r\n//FUNKCJA FILTRUJACA V1\r\n/*\r\n  const filter = () => {\r\n    console.log(\"e target z filtr foo\");\r\n\r\n    if (name !== \"\") {\r\n      console.log(offers);\r\n      const results = offers.filter((user) => {\r\n        return user.title.toLowerCase().includes(name.toLowerCase());\r\n        // Use the toLowerCase() description to make it case-insensitive\r\n      });\r\n      setFoundUsers(results);\r\n    } else {\r\n      setFoundUsers(offers);\r\n      // If the text field is empty, show all users\r\n    }\r\n  };\r\n  */\r\n/*POMOCNY DEBUG  \r\n\r\n            <div className=\"debug\">\r\n            <button\r\n              onClick={() => {\r\n                console.log(offers);\r\n                console.log(\"CONSOL LOG DO WYŚWEITLANIA WARUNKOWEGO \");\r\n              }}\r\n            >\r\n              DEBUG\r\n            </button>\r\n          </div>\r\n\r\n*/\r\n\r\n/*             {/*KIERUNEK SORTOWANIA SCRAP*\r\n            \r\n                        {orderDirectionAscd && (\r\n              <div>\r\n                Ascnding true\r\n                <button\r\n                  onClick={() => setOrderDirectionAscd(!orderDirectionAscd)}\r\n                >\r\n                  {<i className=\"material-icons\">arrow_drop_up</i>}\r\n                </button>\r\n              </div>\r\n            )}\r\n            {!orderDirectionAscd && (\r\n              <div>\r\n                Ascnding false\r\n                <button\r\n                  onClick={() => setOrderDirectionAscd(!orderDirectionAscd)}\r\n                >\r\n                  {<i className=\"material-icons\">arrow_drop_down</i>}\r\n                </button>\r\n              </div>\r\n            )}\r\n            \r\n            /}\r\n            {orderLocaly} {/*wyświetla rodzaj sortowania \r\n            \r\n            \r\n            */\r\n","C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\pages\\About.js",[],[],"C:\\Frontend22\\Projects\\inz\\DevOffers.io\\src\\components\\offerCard.js",[],["90"],{"ruleId":"91","severity":1,"message":"92","line":19,"column":10,"nodeType":"93","messageId":"94","endLine":19,"endColumn":19},{"ruleId":"91","severity":1,"message":"95","line":19,"column":21,"nodeType":"93","messageId":"94","endLine":19,"endColumn":33},{"ruleId":"96","severity":1,"message":"97","line":65,"column":6,"nodeType":"98","endLine":65,"endColumn":8,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":208,"column":32,"nodeType":"102","messageId":"103","endLine":208,"endColumn":34,"suppressions":"104"},{"ruleId":"100","severity":1,"message":"105","line":217,"column":29,"nodeType":"102","messageId":"103","endLine":217,"endColumn":31,"suppressions":"106"},{"ruleId":"91","severity":1,"message":"107","line":26,"column":15,"nodeType":"93","messageId":"94","endLine":26,"endColumn":19},{"ruleId":"91","severity":1,"message":"108","line":24,"column":15,"nodeType":"93","messageId":"94","endLine":24,"endColumn":19},{"ruleId":"96","severity":1,"message":"109","line":41,"column":6,"nodeType":"98","endLine":41,"endColumn":8,"suggestions":"110"},{"ruleId":"91","severity":1,"message":"111","line":18,"column":10,"nodeType":"93","messageId":"94","endLine":18,"endColumn":23},{"ruleId":"91","severity":1,"message":"92","line":19,"column":10,"nodeType":"93","messageId":"94","endLine":19,"endColumn":19},{"ruleId":"91","severity":1,"message":"95","line":19,"column":21,"nodeType":"93","messageId":"94","endLine":19,"endColumn":33},{"ruleId":"91","severity":1,"message":"112","line":13,"column":19,"nodeType":"93","messageId":"94","endLine":13,"endColumn":29},{"ruleId":"91","severity":1,"message":"113","line":16,"column":10,"nodeType":"93","messageId":"94","endLine":16,"endColumn":20},{"ruleId":"91","severity":1,"message":"114","line":16,"column":22,"nodeType":"93","messageId":"94","endLine":16,"endColumn":35},{"ruleId":"96","severity":1,"message":"115","line":65,"column":6,"nodeType":"98","endLine":65,"endColumn":8,"suggestions":"116","suppressions":"117"},{"ruleId":"100","severity":1,"message":"101","line":181,"column":32,"nodeType":"102","messageId":"103","endLine":181,"endColumn":34,"suppressions":"118"},{"ruleId":"100","severity":1,"message":"105","line":190,"column":29,"nodeType":"102","messageId":"103","endLine":190,"endColumn":31,"suppressions":"119"},{"ruleId":"96","severity":1,"message":"120","line":33,"column":6,"nodeType":"98","endLine":33,"endColumn":8,"suggestions":"121","suppressions":"122"},"no-unused-vars","'fromError' is assigned a value but never used.","Identifier","unusedVar","'setFormError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchError'. Either include it or remove the dependency array.","ArrayExpression",["123"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["124"],"Array.prototype.map() expects a value to be returned at the end of arrow function.",["125"],"'data' is assigned a value but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'profilInfo'. Either include it or remove the dependency array.",["126"],"'category_logo' is assigned a value but never used.","'setOrderBy' is assigned a value but never used.","'foundUsers' is assigned a value but never used.","'setFoundUsers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'orderBy'. Either include it or remove the dependency array.",["127"],["128"],["129"],["130"],"React Hook useEffect has missing dependencies: 'offer.liked_by' and 'token'. Either include them or remove the dependency array.",["131"],["132"],{"desc":"133","fix":"134"},{"kind":"135","justification":"136"},{"kind":"135","justification":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"kind":"135","justification":"136"},{"kind":"135","justification":"136"},{"kind":"135","justification":"136"},{"desc":"141","fix":"142"},{"kind":"135","justification":"136"},"Update the dependencies array to be: [fetchError]",{"range":"143","text":"144"},"directive","","Update the dependencies array to be: [profilInfo]",{"range":"145","text":"146"},"Update the dependencies array to be: [orderBy]",{"range":"147","text":"148"},"Update the dependencies array to be: [offer.liked_by, token]",{"range":"149","text":"150"},[2013,2015],"[fetchError]",[1123,1125],"[profilInfo]",[1994,1996],"[orderBy]",[1007,1009],"[offer.liked_by, token]"]