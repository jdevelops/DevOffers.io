{"ast":null,"code":"var _jsxFileName = \"C:\\\\Frontend22\\\\Projects\\\\inz\\\\DevOffers.io\\\\src\\\\pages\\\\CreatedOffers.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\n\n/* eslint-disable array-callback-return */\nimport supabase from \"../config/supabaseClient\";\nimport { useEffect, useState } from \"react\"; // components\n\nimport SmoothieCard from \"../components/smoothieCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = _ref => {\n  _s();\n\n  let {\n    token\n  } = _ref;\n  const [fetchError, setFetchError] = useState(null); // Fetch error, zmienna\n\n  const [smoothies, setSmoothies] = useState(null); // główna baza\n\n  const [orderBy, setOrderBy] = useState(\"created_at\"); // created_at jest nazwa kolumny w bazie\n\n  const [orderLocaly, setOrderLocaly] = useState(\"Sortowanie \");\n  const [orderAscd, setOrderAscd] = useState(true);\n  const [foundUsers, setFoundUsers] = useState(\"\");\n  const [query, setQuery] = useState(\"\"); //function smoothiesByID ((search, criteria, value))\n\n  const testCompare = () => {\n    console.log(token.user.id);\n  }; //Funkcja usuwająca wpis lokalnie\n\n\n  const handleDelete = id => {\n    setSmoothies(pervSmoothies => {\n      return pervSmoothies.filter(sm => sm.id !== id);\n    });\n  }; //funkcja fetchujaca dane z database\n\n\n  useEffect(() => {\n    const fetchSmoothies = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from(\"smoothies\").select().order(orderBy, {\n        ascending: false\n      }); // const { data, error } -> destrukturyzacja obiektu po lewej\n\n      if (error) {\n        setFetchError(\"Can;t fetch \");\n        setSmoothies(null);\n        console.log(error);\n      }\n\n      if (data) {\n        setSmoothies(data);\n        setFetchError(null);\n        console.log(\"POBRANO\");\n      }\n    };\n\n    fetchSmoothies();\n  }, []); //[orderBy] powoduje wywołanie Hooka useEffect za każdym użyciem orderby // brak tylko pojedyncze wywołanie\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TWOJE OFERTY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), fetchError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: fetchError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 22\n    }, this), smoothies && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"smoothies\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"WYSZUKAJ\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => setQuery(event.target.value),\n          placeholder: \"np. Backend developer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-by\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sortuj:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            smoothies.sort(function (a, b) {\n              const dateA = a.created_at;\n              const dateB = b.created_at;\n\n              if (dateA > dateB) {\n                return -1;\n              }\n\n              if (dateA < dateB) {\n                return 1;\n              }\n\n              return 0;\n            });\n\n            if (orderAscd) {\n              setSmoothies(smoothies.reverse());\n              setOrderLocaly(\"Najnowsze najpierw\");\n              setOrderAscd(!orderAscd);\n            } else if (!orderAscd) {\n              setOrderLocaly(\"Najstarsze najpierw\");\n              setSmoothies(smoothies);\n              setOrderAscd(!orderAscd);\n            }\n          },\n          children: \"DATA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            smoothies.sort(function (a, b) {\n              const nameA = a.title.toUpperCase(); // ignore upper and lowercase\n\n              const nameB = b.title.toUpperCase(); // ignore upper and lowercase\n\n              if (nameA > nameB) {\n                return -1;\n              }\n\n              if (nameA < nameB) {\n                return 1;\n              } // names must be equal\n\n\n              return 0;\n            });\n\n            if (orderAscd) {\n              setSmoothies(smoothies.reverse());\n              setOrderLocaly(\"Alfabetycznie rosnoąco\");\n              setOrderAscd(!orderAscd);\n            } else if (!orderAscd) {\n              setOrderLocaly(\"Alfabetycznie malejąco\");\n              setSmoothies(smoothies);\n              setOrderAscd(!orderAscd);\n            }\n          },\n          children: \"A-Z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            smoothies.sort(function (a, b) {\n              const salaryRangeA = (a.salary_low + a.salary_top) / 2;\n              const salaryRangeB = (b.salary_low + b.salary_top) / 2;\n\n              if (salaryRangeA < salaryRangeB) {\n                return 1;\n              }\n\n              if (salaryRangeA > salaryRangeB) {\n                return -1;\n              }\n\n              return 0;\n            });\n\n            if (orderAscd) {\n              setSmoothies(smoothies.reverse());\n              setOrderLocaly(\"widełki rosnoąco\");\n              setOrderAscd(!orderAscd);\n            } else if (!orderAscd) {\n              setSmoothies(smoothies);\n              setOrderLocaly(\"widełki malejąco\");\n              setOrderAscd(!orderAscd);\n            }\n          },\n          children: \"RATING\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"foo1\", smoothies.filter(post => {\n          if (query === \"\") {\n            return post;\n          } else if (post.title.toLowerCase().includes(query.toLowerCase())) {\n            return post;\n          }\n        }).map(post => {\n          if (post.created_by === token.user.id) {\n            return /*#__PURE__*/_jsxDEV(SmoothieCard, {\n              smoothie: post,\n              onDeleteProp: handleDelete,\n              token: token\n            }, post.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 21\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"smoothie-grid\",\n        children: [\"foo3\", smoothies.map(smoothie => {\n          if (smoothie.created_by === token.user.id) {\n            return /*#__PURE__*/_jsxDEV(SmoothieCard, {\n              smoothie: smoothie,\n              onDeleteProp: handleDelete\n            }, smoothie.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"+Jkog0ZbqLWtd9zgYTIEgF8xFMY=\");\n\n_c = Home;\nexport default Home;\n/*  INSERT IN 219 LINE IF YOU WANT TO BACKUP OLD SHOW METHOD \r\n\r\n          <div className=\"smoothie-grid\">\r\n            {smoothies.map((smoothie) => (\r\n              //<p>{smoothie.title}</p> //\r\n              <SmoothieCard\r\n                key={smoothie.id}\r\n                smoothie={smoothie}\r\n                onDeleteProp={handleDelete}\r\n              /> //smoothie={smoothie} -> smoothie jest to prop do którego przekazujemy zmienna smoothie tak jak w Svelte\r\n            ))}\r\n          </div>\r\n\r\n\r\n*/\n\n/*     SHOW FOO \r\n\r\n<div className=\"smoothie-grid\">\r\n            foo2\r\n            {foundUsers && foundUsers.length > 0 ? (\r\n              foundUsers.map((foundSmoothies) => {\r\n                if (foundSmoothies.created_by === token.user.id) {\r\n                  return (\r\n                    <SmoothieCard\r\n                      key={foundSmoothies.id}\r\n                      smoothie={foundSmoothies}\r\n                      onDeleteProp={handleDelete}\r\n                      token={token}\r\n                    />\r\n                  );\r\n                }\r\n              })\r\n            ) : (\r\n              <h1>Nic nie znaleziono </h1>\r\n            )}\r\n            ;\r\n          </div> */\n\n/*        FILTER WITH FETCH /// SCRAP THAT \r\n          <div className=\"order-by\">\r\n            <p>Order by:</p>\r\n            <button onClick={() => setOrderBy(\"created_at\")}>\r\n              Time Created\r\n            </button>\r\n            <button onClick={() => setOrderBy(\"title\")}>Title</button>\r\n            <button onClick={() => setOrderBy(\"rating\")}>rating</button>\r\n            {orderBy}\r\n          </div>\r\n          */\n\n/*PIERWOWZÓR SEARCH BARA\r\n                        <div className=\"user-list\">\r\n              {foundUsers && foundUsers.length > 0 ? (\r\n                foundUsers.map((smoothies) => (\r\n                  <li key={smoothies.id} className=\"user\">\r\n                    <span className=\"user-id\">{smoothies.id}</span>\r\n                    <span className=\"user-name\">{smoothies.title}</span>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <h1>No results found!</h1>\r\n              )}\r\n            </div>\r\n            */\n\n/*V2 SEARCH BAR\r\n          \r\n           <div>\r\n            SEARCH:\r\n            <input\r\n              type=\"search\"\r\n              value={name}\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n                filter();\r\n              }}\r\n              className=\"input\"\r\n              placeholder=\"Filter\"\r\n            />\r\n          </div>\r\n          */\n//FUNKCJA FILTRUJACA V1\n\n/*\r\n  const filter = () => {\r\n    console.log(\"e target z filtr foo\");\r\n\r\n    if (name !== \"\") {\r\n      console.log(smoothies);\r\n      const results = smoothies.filter((user) => {\r\n        return user.title.toLowerCase().includes(name.toLowerCase());\r\n        // Use the toLowerCase() method to make it case-insensitive\r\n      });\r\n      setFoundUsers(results);\r\n    } else {\r\n      setFoundUsers(smoothies);\r\n      // If the text field is empty, show all users\r\n    }\r\n  };\r\n  */\n\n/*POMOCNY DEBUG  \r\n\r\n            <div className=\"debug\">\r\n            <button\r\n              onClick={() => {\r\n                console.log(smoothies);\r\n                console.log(\"CONSOL LOG DO WYŚWEITLANIA WARUNKOWEGO \");\r\n              }}\r\n            >\r\n              DEBUG\r\n            </button>\r\n          </div>\r\n\r\n*/\n\n/*             {/*KIERUNEK SORTOWANIA SCRAP*\r\n            \r\n                        {orderDirectionAscd && (\r\n              <div>\r\n                Ascnding true\r\n                <button\r\n                  onClick={() => setOrderDirectionAscd(!orderDirectionAscd)}\r\n                >\r\n                  {<i className=\"material-icons\">arrow_drop_up</i>}\r\n                </button>\r\n              </div>\r\n            )}\r\n            {!orderDirectionAscd && (\r\n              <div>\r\n                Ascnding false\r\n                <button\r\n                  onClick={() => setOrderDirectionAscd(!orderDirectionAscd)}\r\n                >\r\n                  {<i className=\"material-icons\">arrow_drop_down</i>}\r\n                </button>\r\n              </div>\r\n            )}\r\n            \r\n            /}\r\n            {orderLocaly} {/*wyświetla rodzaj sortowania \r\n            \r\n            \r\n            */\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["supabase","useEffect","useState","SmoothieCard","Home","token","fetchError","setFetchError","smoothies","setSmoothies","orderBy","setOrderBy","orderLocaly","setOrderLocaly","orderAscd","setOrderAscd","foundUsers","setFoundUsers","query","setQuery","testCompare","console","log","user","id","handleDelete","pervSmoothies","filter","sm","fetchSmoothies","data","error","from","select","order","ascending","event","target","value","sort","a","b","dateA","created_at","dateB","reverse","nameA","title","toUpperCase","nameB","salaryRangeA","salary_low","salary_top","salaryRangeB","post","toLowerCase","includes","map","created_by","smoothie"],"sources":["C:/Frontend22/Projects/inz/DevOffers.io/src/pages/CreatedOffers.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable array-callback-return */\r\nimport supabase from \"../config/supabaseClient\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n// components\r\n\r\nimport SmoothieCard from \"../components/smoothieCard\";\r\n\r\nconst Home = ({ token }) => {\r\n  const [fetchError, setFetchError] = useState(null); // Fetch error, zmienna\r\n  const [smoothies, setSmoothies] = useState(null); // główna baza\r\n  const [orderBy, setOrderBy] = useState(\"created_at\"); // created_at jest nazwa kolumny w bazie\r\n  const [orderLocaly, setOrderLocaly] = useState(\"Sortowanie \");\r\n  const [orderAscd, setOrderAscd] = useState(true);\r\n  const [foundUsers, setFoundUsers] = useState(\"\");\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  //function smoothiesByID ((search, criteria, value))\r\n  const testCompare = () => {\r\n    console.log(token.user.id);\r\n  };\r\n\r\n  //Funkcja usuwająca wpis lokalnie\r\n  const handleDelete = (id) => {\r\n    setSmoothies((pervSmoothies) => {\r\n      return pervSmoothies.filter((sm) => sm.id !== id);\r\n    });\r\n  };\r\n\r\n  //funkcja fetchujaca dane z database\r\n  useEffect(() => {\r\n    const fetchSmoothies = async () => {\r\n      const { data, error } = await supabase\r\n        .from(\"smoothies\")\r\n        .select()\r\n        .order(orderBy, { ascending: false }); // const { data, error } -> destrukturyzacja obiektu po lewej\r\n\r\n      if (error) {\r\n        setFetchError(\"Can;t fetch \");\r\n        setSmoothies(null);\r\n        console.log(error);\r\n      }\r\n      if (data) {\r\n        setSmoothies(data);\r\n        setFetchError(null);\r\n        console.log(\"POBRANO\");\r\n      }\r\n    };\r\n\r\n    fetchSmoothies();\r\n  }, []); //[orderBy] powoduje wywołanie Hooka useEffect za każdym użyciem orderby // brak tylko pojedyncze wywołanie\r\n\r\n  return (\r\n    <div className=\"page home\">\r\n      <h1>TWOJE OFERTY</h1>\r\n      {fetchError && <p>{fetchError}</p>}\r\n      {smoothies && (\r\n        <div className=\"smoothies\">\r\n          {/*SEARCH BAR*/}\r\n          <div>\r\n            WYSZUKAJ\r\n            <input\r\n              onChange={(event) => setQuery(event.target.value)}\r\n              placeholder=\"np. Backend developer\"\r\n            />\r\n          </div>\r\n          <div className=\"order-by\">\r\n            <p>Sortuj:</p>\r\n            <button\r\n              onClick={() => {\r\n                smoothies.sort(function (a, b) {\r\n                  const dateA = a.created_at;\r\n                  const dateB = b.created_at;\r\n                  if (dateA > dateB) {\r\n                    return -1;\r\n                  }\r\n                  if (dateA < dateB) {\r\n                    return 1;\r\n                  }\r\n                  return 0;\r\n                });\r\n                if (orderAscd) {\r\n                  setSmoothies(smoothies.reverse());\r\n                  setOrderLocaly(\"Najnowsze najpierw\");\r\n                  setOrderAscd(!orderAscd);\r\n                } else if (!orderAscd) {\r\n                  setOrderLocaly(\"Najstarsze najpierw\");\r\n                  setSmoothies(smoothies);\r\n                  setOrderAscd(!orderAscd);\r\n                }\r\n              }}\r\n            >\r\n              DATA\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                smoothies.sort(function (a, b) {\r\n                  const nameA = a.title.toUpperCase(); // ignore upper and lowercase\r\n                  const nameB = b.title.toUpperCase(); // ignore upper and lowercase\r\n                  if (nameA > nameB) {\r\n                    return -1;\r\n                  }\r\n                  if (nameA < nameB) {\r\n                    return 1;\r\n                  }\r\n                  // names must be equal\r\n                  return 0;\r\n                });\r\n                if (orderAscd) {\r\n                  setSmoothies(smoothies.reverse());\r\n                  setOrderLocaly(\"Alfabetycznie rosnoąco\");\r\n                  setOrderAscd(!orderAscd);\r\n                } else if (!orderAscd) {\r\n                  setOrderLocaly(\"Alfabetycznie malejąco\");\r\n                  setSmoothies(smoothies);\r\n                  setOrderAscd(!orderAscd);\r\n                }\r\n              }}\r\n            >\r\n              A-Z\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                smoothies.sort(function (a, b) {\r\n                  const salaryRangeA = (a.salary_low + a.salary_top) / 2;\r\n                  const salaryRangeB = (b.salary_low + b.salary_top) / 2;\r\n                  if (salaryRangeA < salaryRangeB) {\r\n                    return 1;\r\n                  }\r\n                  if (salaryRangeA > salaryRangeB) {\r\n                    return -1;\r\n                  }\r\n                  return 0;\r\n                });\r\n                if (orderAscd) {\r\n                  setSmoothies(smoothies.reverse());\r\n                  setOrderLocaly(\"widełki rosnoąco\");\r\n                  setOrderAscd(!orderAscd);\r\n                } else if (!orderAscd) {\r\n                  setSmoothies(smoothies);\r\n                  setOrderLocaly(\"widełki malejąco\");\r\n                  setOrderAscd(!orderAscd);\r\n                }\r\n              }}\r\n            >\r\n              RATING\r\n            </button>\r\n          </div>\r\n          {/*WYSWIETLANIE POSTÓW Z FILTREM I SORTOWANIEM  */}\r\n          <div>\r\n            foo1\r\n            {smoothies\r\n              .filter((post) => {\r\n                if (query === \"\") {\r\n                  return post;\r\n                } else if (\r\n                  post.title.toLowerCase().includes(query.toLowerCase())\r\n                ) {\r\n                  return post;\r\n                }\r\n              })\r\n              .map((post) => {\r\n                if (post.created_by === token.user.id) {\r\n                  return (\r\n                    <SmoothieCard\r\n                      key={post.id}\r\n                      smoothie={post}\r\n                      onDeleteProp={handleDelete}\r\n                      token={token}\r\n                    />\r\n                  );\r\n                }\r\n              })}\r\n          </div>\r\n\r\n          {/*BETTER SORTING */}\r\n\r\n          <div className=\"smoothie-grid\">\r\n            foo3\r\n            {smoothies.map((smoothie) => {\r\n              if (smoothie.created_by === token.user.id) {\r\n                return (\r\n                  <SmoothieCard\r\n                    key={smoothie.id}\r\n                    smoothie={smoothie}\r\n                    onDeleteProp={handleDelete}\r\n                  />\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n/*  INSERT IN 219 LINE IF YOU WANT TO BACKUP OLD SHOW METHOD \r\n\r\n          <div className=\"smoothie-grid\">\r\n            {smoothies.map((smoothie) => (\r\n              //<p>{smoothie.title}</p> //\r\n              <SmoothieCard\r\n                key={smoothie.id}\r\n                smoothie={smoothie}\r\n                onDeleteProp={handleDelete}\r\n              /> //smoothie={smoothie} -> smoothie jest to prop do którego przekazujemy zmienna smoothie tak jak w Svelte\r\n            ))}\r\n          </div>\r\n\r\n\r\n*/\r\n\r\n/*     SHOW FOO \r\n\r\n<div className=\"smoothie-grid\">\r\n            foo2\r\n            {foundUsers && foundUsers.length > 0 ? (\r\n              foundUsers.map((foundSmoothies) => {\r\n                if (foundSmoothies.created_by === token.user.id) {\r\n                  return (\r\n                    <SmoothieCard\r\n                      key={foundSmoothies.id}\r\n                      smoothie={foundSmoothies}\r\n                      onDeleteProp={handleDelete}\r\n                      token={token}\r\n                    />\r\n                  );\r\n                }\r\n              })\r\n            ) : (\r\n              <h1>Nic nie znaleziono </h1>\r\n            )}\r\n            ;\r\n          </div> */\r\n\r\n/*        FILTER WITH FETCH /// SCRAP THAT \r\n          <div className=\"order-by\">\r\n            <p>Order by:</p>\r\n            <button onClick={() => setOrderBy(\"created_at\")}>\r\n              Time Created\r\n            </button>\r\n            <button onClick={() => setOrderBy(\"title\")}>Title</button>\r\n            <button onClick={() => setOrderBy(\"rating\")}>rating</button>\r\n            {orderBy}\r\n          </div>\r\n          */\r\n\r\n/*PIERWOWZÓR SEARCH BARA\r\n                        <div className=\"user-list\">\r\n              {foundUsers && foundUsers.length > 0 ? (\r\n                foundUsers.map((smoothies) => (\r\n                  <li key={smoothies.id} className=\"user\">\r\n                    <span className=\"user-id\">{smoothies.id}</span>\r\n                    <span className=\"user-name\">{smoothies.title}</span>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <h1>No results found!</h1>\r\n              )}\r\n            </div>\r\n            */\r\n\r\n/*V2 SEARCH BAR\r\n          \r\n           <div>\r\n            SEARCH:\r\n            <input\r\n              type=\"search\"\r\n              value={name}\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n                filter();\r\n              }}\r\n              className=\"input\"\r\n              placeholder=\"Filter\"\r\n            />\r\n          </div>\r\n          */\r\n\r\n//FUNKCJA FILTRUJACA V1\r\n/*\r\n  const filter = () => {\r\n    console.log(\"e target z filtr foo\");\r\n\r\n    if (name !== \"\") {\r\n      console.log(smoothies);\r\n      const results = smoothies.filter((user) => {\r\n        return user.title.toLowerCase().includes(name.toLowerCase());\r\n        // Use the toLowerCase() method to make it case-insensitive\r\n      });\r\n      setFoundUsers(results);\r\n    } else {\r\n      setFoundUsers(smoothies);\r\n      // If the text field is empty, show all users\r\n    }\r\n  };\r\n  */\r\n/*POMOCNY DEBUG  \r\n\r\n            <div className=\"debug\">\r\n            <button\r\n              onClick={() => {\r\n                console.log(smoothies);\r\n                console.log(\"CONSOL LOG DO WYŚWEITLANIA WARUNKOWEGO \");\r\n              }}\r\n            >\r\n              DEBUG\r\n            </button>\r\n          </div>\r\n\r\n*/\r\n\r\n/*             {/*KIERUNEK SORTOWANIA SCRAP*\r\n            \r\n                        {orderDirectionAscd && (\r\n              <div>\r\n                Ascnding true\r\n                <button\r\n                  onClick={() => setOrderDirectionAscd(!orderDirectionAscd)}\r\n                >\r\n                  {<i className=\"material-icons\">arrow_drop_up</i>}\r\n                </button>\r\n              </div>\r\n            )}\r\n            {!orderDirectionAscd && (\r\n              <div>\r\n                Ascnding false\r\n                <button\r\n                  onClick={() => setOrderDirectionAscd(!orderDirectionAscd)}\r\n                >\r\n                  {<i className=\"material-icons\">arrow_drop_down</i>}\r\n                </button>\r\n              </div>\r\n            )}\r\n            \r\n            /}\r\n            {orderLocaly} {/*wyświetla rodzaj sortowania \r\n            \r\n            \r\n            */\r\n"],"mappings":";;;AAAA;;AACA;AACA,OAAOA,QAAP,MAAqB,0BAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CAEA;;AAEA,OAAOC,YAAP,MAAyB,4BAAzB;;;AAEA,MAAMC,IAAI,GAAG,QAAe;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAC1B,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,IAAD,CAA5C,CAD0B,CAC0B;;EACpD,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C,CAF0B,CAEwB;;EAClD,MAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,YAAD,CAAtC,CAH0B,CAG4B;;EACtD,MAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,aAAD,CAA9C;EACA,MAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC,CAP0B,CAS1B;;EACA,MAAMkB,WAAW,GAAG,MAAM;IACxBC,OAAO,CAACC,GAAR,CAAYjB,KAAK,CAACkB,IAAN,CAAWC,EAAvB;EACD,CAFD,CAV0B,CAc1B;;;EACA,MAAMC,YAAY,GAAID,EAAD,IAAQ;IAC3Bf,YAAY,CAAEiB,aAAD,IAAmB;MAC9B,OAAOA,aAAa,CAACC,MAAd,CAAsBC,EAAD,IAAQA,EAAE,CAACJ,EAAH,KAAUA,EAAvC,CAAP;IACD,CAFW,CAAZ;EAGD,CAJD,CAf0B,CAqB1B;;;EACAvB,SAAS,CAAC,MAAM;IACd,MAAM4B,cAAc,GAAG,YAAY;MACjC,MAAM;QAAEC,IAAF;QAAQC;MAAR,IAAkB,MAAM/B,QAAQ,CACnCgC,IAD2B,CACtB,WADsB,EAE3BC,MAF2B,GAG3BC,KAH2B,CAGrBxB,OAHqB,EAGZ;QAAEyB,SAAS,EAAE;MAAb,CAHY,CAA9B,CADiC,CAIQ;;MAEzC,IAAIJ,KAAJ,EAAW;QACTxB,aAAa,CAAC,cAAD,CAAb;QACAE,YAAY,CAAC,IAAD,CAAZ;QACAY,OAAO,CAACC,GAAR,CAAYS,KAAZ;MACD;;MACD,IAAID,IAAJ,EAAU;QACRrB,YAAY,CAACqB,IAAD,CAAZ;QACAvB,aAAa,CAAC,IAAD,CAAb;QACAc,OAAO,CAACC,GAAR,CAAY,SAAZ;MACD;IACF,CAhBD;;IAkBAO,cAAc;EACf,CApBQ,EAoBN,EApBM,CAAT,CAtB0B,CA0ClB;;EAER,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGvB,UAAU,iBAAI;MAAA,UAAIA;IAAJ;MAAA;MAAA;MAAA;IAAA,QAFjB,EAGGE,SAAS,iBACR;MAAK,SAAS,EAAC,WAAf;MAAA,wBAEE;QAAA,oCAEE;UACE,QAAQ,EAAG4B,KAAD,IAAWjB,QAAQ,CAACiB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAD/B;UAEE,WAAW,EAAC;QAFd;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eASE;QAAK,SAAS,EAAC,UAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,OAAO,EAAE,MAAM;YACb9B,SAAS,CAAC+B,IAAV,CAAe,UAAUC,CAAV,EAAaC,CAAb,EAAgB;cAC7B,MAAMC,KAAK,GAAGF,CAAC,CAACG,UAAhB;cACA,MAAMC,KAAK,GAAGH,CAAC,CAACE,UAAhB;;cACA,IAAID,KAAK,GAAGE,KAAZ,EAAmB;gBACjB,OAAO,CAAC,CAAR;cACD;;cACD,IAAIF,KAAK,GAAGE,KAAZ,EAAmB;gBACjB,OAAO,CAAP;cACD;;cACD,OAAO,CAAP;YACD,CAVD;;YAWA,IAAI9B,SAAJ,EAAe;cACbL,YAAY,CAACD,SAAS,CAACqC,OAAV,EAAD,CAAZ;cACAhC,cAAc,CAAC,oBAAD,CAAd;cACAE,YAAY,CAAC,CAACD,SAAF,CAAZ;YACD,CAJD,MAIO,IAAI,CAACA,SAAL,EAAgB;cACrBD,cAAc,CAAC,qBAAD,CAAd;cACAJ,YAAY,CAACD,SAAD,CAAZ;cACAO,YAAY,CAAC,CAACD,SAAF,CAAZ;YACD;UACF,CAtBH;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eA4BE;UACE,OAAO,EAAE,MAAM;YACbN,SAAS,CAAC+B,IAAV,CAAe,UAAUC,CAAV,EAAaC,CAAb,EAAgB;cAC7B,MAAMK,KAAK,GAAGN,CAAC,CAACO,KAAF,CAAQC,WAAR,EAAd,CAD6B,CACQ;;cACrC,MAAMC,KAAK,GAAGR,CAAC,CAACM,KAAF,CAAQC,WAAR,EAAd,CAF6B,CAEQ;;cACrC,IAAIF,KAAK,GAAGG,KAAZ,EAAmB;gBACjB,OAAO,CAAC,CAAR;cACD;;cACD,IAAIH,KAAK,GAAGG,KAAZ,EAAmB;gBACjB,OAAO,CAAP;cACD,CAR4B,CAS7B;;;cACA,OAAO,CAAP;YACD,CAXD;;YAYA,IAAInC,SAAJ,EAAe;cACbL,YAAY,CAACD,SAAS,CAACqC,OAAV,EAAD,CAAZ;cACAhC,cAAc,CAAC,wBAAD,CAAd;cACAE,YAAY,CAAC,CAACD,SAAF,CAAZ;YACD,CAJD,MAIO,IAAI,CAACA,SAAL,EAAgB;cACrBD,cAAc,CAAC,wBAAD,CAAd;cACAJ,YAAY,CAACD,SAAD,CAAZ;cACAO,YAAY,CAAC,CAACD,SAAF,CAAZ;YACD;UACF,CAvBH;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QA5BF,eAuDE;UACE,OAAO,EAAE,MAAM;YACbN,SAAS,CAAC+B,IAAV,CAAe,UAAUC,CAAV,EAAaC,CAAb,EAAgB;cAC7B,MAAMS,YAAY,GAAG,CAACV,CAAC,CAACW,UAAF,GAAeX,CAAC,CAACY,UAAlB,IAAgC,CAArD;cACA,MAAMC,YAAY,GAAG,CAACZ,CAAC,CAACU,UAAF,GAAeV,CAAC,CAACW,UAAlB,IAAgC,CAArD;;cACA,IAAIF,YAAY,GAAGG,YAAnB,EAAiC;gBAC/B,OAAO,CAAP;cACD;;cACD,IAAIH,YAAY,GAAGG,YAAnB,EAAiC;gBAC/B,OAAO,CAAC,CAAR;cACD;;cACD,OAAO,CAAP;YACD,CAVD;;YAWA,IAAIvC,SAAJ,EAAe;cACbL,YAAY,CAACD,SAAS,CAACqC,OAAV,EAAD,CAAZ;cACAhC,cAAc,CAAC,kBAAD,CAAd;cACAE,YAAY,CAAC,CAACD,SAAF,CAAZ;YACD,CAJD,MAIO,IAAI,CAACA,SAAL,EAAgB;cACrBL,YAAY,CAACD,SAAD,CAAZ;cACAK,cAAc,CAAC,kBAAD,CAAd;cACAE,YAAY,CAAC,CAACD,SAAF,CAAZ;YACD;UACF,CAtBH;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAvDF;MAAA;QAAA;QAAA;QAAA;MAAA,QATF,eA4FE;QAAA,mBAEGN,SAAS,CACPmB,MADF,CACU2B,IAAD,IAAU;UAChB,IAAIpC,KAAK,KAAK,EAAd,EAAkB;YAChB,OAAOoC,IAAP;UACD,CAFD,MAEO,IACLA,IAAI,CAACP,KAAL,CAAWQ,WAAX,GAAyBC,QAAzB,CAAkCtC,KAAK,CAACqC,WAAN,EAAlC,CADK,EAEL;YACA,OAAOD,IAAP;UACD;QACF,CATF,EAUEG,GAVF,CAUOH,IAAD,IAAU;UACb,IAAIA,IAAI,CAACI,UAAL,KAAoBrD,KAAK,CAACkB,IAAN,CAAWC,EAAnC,EAAuC;YACrC,oBACE,QAAC,YAAD;cAEE,QAAQ,EAAE8B,IAFZ;cAGE,YAAY,EAAE7B,YAHhB;cAIE,KAAK,EAAEpB;YAJT,GACOiD,IAAI,CAAC9B,EADZ;cAAA;cAAA;cAAA;YAAA,QADF;UAQD;QACF,CArBF,CAFH;MAAA;QAAA;QAAA;QAAA;MAAA,QA5FF,eAwHE;QAAK,SAAS,EAAC,eAAf;QAAA,mBAEGhB,SAAS,CAACiD,GAAV,CAAeE,QAAD,IAAc;UAC3B,IAAIA,QAAQ,CAACD,UAAT,KAAwBrD,KAAK,CAACkB,IAAN,CAAWC,EAAvC,EAA2C;YACzC,oBACE,QAAC,YAAD;cAEE,QAAQ,EAAEmC,QAFZ;cAGE,YAAY,EAAElC;YAHhB,GACOkC,QAAQ,CAACnC,EADhB;cAAA;cAAA;cAAA;YAAA,QADF;UAOD;QACF,CAVA,CAFH;MAAA;QAAA;QAAA;QAAA;MAAA,QAxHF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA+ID,CA3LD;;GAAMpB,I;;KAAAA,I;AA6LN,eAAeA,IAAf},"metadata":{},"sourceType":"module"}