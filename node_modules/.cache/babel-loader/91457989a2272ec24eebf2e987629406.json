{"ast":null,"code":"var _jsxFileName = \"C:\\\\Frontend22\\\\Projects\\\\inz\\\\DevOffers.io\\\\src\\\\pages\\\\Update.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, useNavigate } from \"react-router-dom\"; // pozwala na użycie Hooka useParam\n\nimport { useEffect, useState } from \"react\";\nimport supabase from \"../config/supabaseClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Update = () => {\n  _s();\n\n  const {\n    id\n  } = useParams(); // na podstawie routingu z app.js przyjmujemy paratmetr id który możemy użyć w obecnym komponencie jako obiekt\n\n  const navigate = useNavigate(); //Funkcja wywołana podczas załądowania componentu ma\n\n  const [title, setTitle] = useState(\"\");\n  const [method, setMethod] = useState(\"\"); // potencjalnie zmienić na recepie\n\n  const [rating, setRating] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [fromError, setFormError] = useState(null);\n  let recepie = method;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!title || !method || !rating) {\n      /* !title oznacza if title === null or reszta */\n      setFormError(\"Please fill all fields \");\n      return;\n    }\n\n    const {\n      data,\n      error\n    } = await supabase.from(\"smoothies\").update({\n      title,\n      recepie,\n      rating,\n      url\n    }).eq(\"id\", id).select();\n\n    if (error) {\n      setFormError(\"Please fill all fields  thrown by handleSubmit()\");\n      console.log(error);\n    }\n\n    if (data) {\n      setFormError(\"null\");\n      navigate(\"/\");\n    }\n  };\n\n  useEffect(() => {\n    const fetchSmoothie = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from(\"smoothies\") // pobranie z tabeli\n      .select() // zwracanie daty\n      .eq(\"id\", id) //linijka odpowiedzialna za filtrowanie zwraca jeżeli kolumna \"id\" jest równa zmiennej id\n      .single();\n\n      if (error) {\n        navigate(\"/\", {\n          replace: true\n        }); // replace true zamienia ostatnia strone w histori na strone główną\n      }\n\n      if (data) {\n        setTitle(data.title);\n        setMethod(data.recepie);\n        setRating(data.rating);\n        setUrl(data.link_url);\n        console.log(data);\n      }\n      /* MOZE ZOSTANIE UŻYTE\n      function helperFoo(d, e) {\n        if (d !== null) {\n          console.log(d, e);\n          console.log(\"data is not null\");\n        } else if (e !== null) {\n          console.log(d, e);\n          console.log(\"error is not null\");\n          navigate(\"/\", { replace: true });\n        } else {\n          console.log(d, e);\n          console.log(\"idk what happend\");\n        }\n      }\n      helperFoo(data, error);\n      */\n\n    };\n\n    fetchSmoothie(); // invoke funkcji na koniec parsowaniaHooka\n  }, [id, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page update\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title :: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        value: title\n        /* wartość inputu przechowywana w Hooku useState*/\n        ,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"method\",\n        children: \"Methoda/Recepie:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"method\",\n        value: method,\n        onChange: e => setMethod(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"rating\",\n        children: \"Rating::\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"rating\",\n        value: rating,\n        onChange: e => setRating(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"url\",\n        children: \"Link do Formularza zg\\u0142oszeniowego\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"url\",\n        value: url,\n        onChange: e => setUrl(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Update Smoothie Recepie \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), fromError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: fromError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 23\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Update, \"iMHu7RLZuZ0e/0L6Pan7ysKOHlw=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Update;\nexport default Update;\n\nvar _c;\n\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["useParams","useNavigate","useEffect","useState","supabase","Update","id","navigate","title","setTitle","method","setMethod","rating","setRating","url","setUrl","fromError","setFormError","recepie","handleSubmit","e","preventDefault","data","error","from","update","eq","select","console","log","fetchSmoothie","single","replace","link_url","target","value"],"sources":["C:/Frontend22/Projects/inz/DevOffers.io/src/pages/Update.js"],"sourcesContent":["import { useParams, useNavigate } from \"react-router-dom\"; // pozwala na użycie Hooka useParam\nimport { useEffect, useState } from \"react\";\nimport supabase from \"../config/supabaseClient\";\n\nconst Update = () => {\n  const { id } = useParams(); // na podstawie routingu z app.js przyjmujemy paratmetr id który możemy użyć w obecnym komponencie jako obiekt\n  const navigate = useNavigate();\n  //Funkcja wywołana podczas załądowania componentu ma\n\n  const [title, setTitle] = useState(\"\");\n  const [method, setMethod] = useState(\"\"); // potencjalnie zmienić na recepie\n  const [rating, setRating] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [fromError, setFormError] = useState(null);\n  let recepie = method;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!title || !method || !rating) {\n      /* !title oznacza if title === null or reszta */\n      setFormError(\"Please fill all fields \");\n      return;\n    }\n\n    const { data, error } = await supabase\n      .from(\"smoothies\")\n      .update({ title, recepie, rating, url })\n      .eq(\"id\", id)\n      .select();\n\n    if (error) {\n      setFormError(\"Please fill all fields  thrown by handleSubmit()\");\n      console.log(error);\n    }\n    if (data) {\n      setFormError(\"null\");\n      navigate(\"/\");\n    }\n  };\n\n  useEffect(() => {\n    const fetchSmoothie = async () => {\n      const { data, error } = await supabase\n        .from(\"smoothies\") // pobranie z tabeli\n        .select() // zwracanie daty\n        .eq(\"id\", id) //linijka odpowiedzialna za filtrowanie zwraca jeżeli kolumna \"id\" jest równa zmiennej id\n        .single();\n\n      if (error) {\n        navigate(\"/\", { replace: true }); // replace true zamienia ostatnia strone w histori na strone główną\n      }\n      if (data) {\n        setTitle(data.title);\n        setMethod(data.recepie);\n        setRating(data.rating);\n        setUrl(data.link_url);\n        console.log(data);\n      }\n      /* MOZE ZOSTANIE UŻYTE\n      function helperFoo(d, e) {\n        if (d !== null) {\n          console.log(d, e);\n          console.log(\"data is not null\");\n        } else if (e !== null) {\n          console.log(d, e);\n          console.log(\"error is not null\");\n          navigate(\"/\", { replace: true });\n        } else {\n          console.log(d, e);\n          console.log(\"idk what happend\");\n        }\n      }\n      helperFoo(data, error);\n      */\n    };\n    fetchSmoothie(); // invoke funkcji na koniec parsowaniaHooka\n  }, [id, navigate]);\n\n  return (\n    <div className=\"page update\">\n      <form onSubmit={handleSubmit}>\n        {/* wstawić onSubmit={handleSubmit} */}\n        <label htmlFor=\"title\">Title :: </label>{\" \"}\n        {/* to tworzy label który jest wyświetlany na stronie  */}\n        <input\n          type=\"text\"\n          id=\"title\"\n          value={title /* wartość inputu przechowywana w Hooku useState*/}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        {/* Reactowy event handler który reaguje w momencie zmiany value danego elementu, w tym wypadku input*/}\n        <label htmlFor=\"method\">Methoda/Recepie:</label>\n        <textarea\n          id=\"method\"\n          value={method}\n          onChange={(e) => setMethod(e.target.value)}\n        />\n        <label htmlFor=\"rating\">Rating::</label>\n        <input\n          type=\"text\"\n          id=\"rating\"\n          value={rating}\n          onChange={(e) => setRating(e.target.value)}\n        />\n        <label htmlFor=\"url\">Link do Formularza zgłoszeniowego</label>\n        <input\n          type=\"text\"\n          id=\"url\"\n          value={url}\n          onChange={(e) => setUrl(e.target.value)}\n        />\n        <button>Update Smoothie Recepie </button>\n        {fromError && <p className=\"error\">{fromError}</p>}{\" \"}\n        {/*linijka pozwalająca wyrzucić error zamiast formularza, warunek if formError === true*/}\n      </form>\n      <h2>Create</h2>\n    </div>\n  );\n};\n\nexport default Update;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}