{"ast":null,"code":"var _jsxFileName = \"C:\\\\Frontend22\\\\Projects\\\\inz\\\\DevOffers.io\\\\src\\\\pages\\\\CreatedOffers.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\n\n/* eslint-disable array-callback-return */\nimport supabase from \"../config/supabaseClient\";\nimport { useEffect, useState } from \"react\"; // components\n\nimport OfferCard from \"../components/offerCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreatedOffers = _ref => {\n  _s();\n\n  let {\n    token\n  } = _ref;\n  const [fetchError, setFetchError] = useState(null); // Fetch error, zmienna\n\n  const [offers, setOffers] = useState(null); // główna baza\n\n  const [orderBy, setOrderBy] = useState(\"created_at\"); // created_at jest nazwa kolumny w bazie\n\n  const [orderLocaly, setOrderLocaly] = useState(\"Sortowanie \");\n  const [orderAscd, setOrderAscd] = useState(true);\n  const [foundUsers, setFoundUsers] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  let zmiennaEffect = \"none\"; //Funkcja usuwająca wpis lokalnie\n\n  const handleDelete = id => {\n    setOffers(pervSmoothies => {\n      return pervSmoothies.filter(sm => sm.id !== id);\n    });\n  }; //Funcjka sortująca\n\n\n  function handleSortEffect(e) {\n    console.log(e.target.id); //setSortEffect(e.target.id);\n\n    zmiennaEffect = e.target.id;\n\n    switch (zmiennaEffect) {\n      case \"az\":\n        console.log(e.target);\n        e.target.classList.add(\"searchbar--active\");\n        break;\n\n      case \"data\":\n        e.target.classList.add(\"searchbar--active\");\n        break;\n\n      case \"salary\":\n        e.target.classList.add(\"searchbar--active\");\n        break;\n\n      default:\n        console.log(\"none1\");\n    }\n  } //funkcja fetchujaca dane z database\n\n\n  useEffect(() => {\n    const fetchSmoothies = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from(\"offers\").select().order(orderBy, {\n        ascending: false\n      }); // const { data, error } -> destrukturyzacja obiektu po lewej\n\n      if (error) {\n        setFetchError(\"Can;t fetch \");\n        setOffers(null);\n        console.log(error);\n      }\n\n      if (data) {\n        setOffers(data);\n        setFetchError(null);\n        console.log(\"POBRANO\");\n      }\n    };\n\n    fetchSmoothies();\n  }, []); //[orderBy] powoduje wywołanie Hooka useEffect za każdym użyciem orderby // brak tylko pojedyncze wywołanie\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TWOJE OFERTY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), fetchError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: fetchError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 22\n    }, this), offers && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"offers\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"searchbar_search\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: event => setQuery(event.target.value),\n            placeholder: \"WYSZUKAJ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"searchbar_sort\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"data\",\n            onClick: obj => {\n              handleSortEffect(obj);\n              smoothies.sort(function (a, b) {\n                const dateA = a.created_at;\n                const dateB = b.created_at;\n\n                if (dateA > dateB) {\n                  return -1;\n                }\n\n                if (dateA < dateB) {\n                  return 1;\n                }\n\n                return 0;\n              });\n\n              if (orderAscd) {\n                setOffers(smoothies.reverse());\n                setOrderLocaly(\"Najstarsze najpierw \");\n                setOrderAscd(!orderAscd);\n              } else if (!orderAscd) {\n                setOrderLocaly(\"Najnowsze najpierw\");\n                setOffers(smoothies);\n                setOrderAscd(!orderAscd);\n              }\n            },\n            children: \"DATA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"az\",\n            onClick: obj => {\n              handleSortEffect(obj);\n              smoothies.sort(function (a, b) {\n                const nameA = a.title.toUpperCase(); // ignore upper and lowercase\n\n                const nameB = b.title.toUpperCase(); // ignore upper and lowercase\n\n                if (nameA > nameB) {\n                  return -1;\n                }\n\n                if (nameA < nameB) {\n                  return 1;\n                } // names must be equal\n\n\n                return 0;\n              });\n\n              if (orderAscd) {\n                setOffers(smoothies.reverse());\n                setOrderLocaly(\"Alfabetycznie rosnoąco\");\n                setOrderAscd(!orderAscd);\n              } else if (!orderAscd) {\n                setOrderLocaly(\"Alfabetycznie malejąco\");\n                setOffers(smoothies);\n                setOrderAscd(!orderAscd);\n              }\n            },\n            children: \"A-Z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"salary\",\n            onClick: obj => {\n              handleSortEffect(obj);\n              smoothies.sort(function (a, b) {\n                const salaryRangeA = (a.salary_low + a.salary_top) / 2;\n                const salaryRangeB = (b.salary_low + b.salary_top) / 2;\n\n                if (salaryRangeA < salaryRangeB) {\n                  return 1;\n                }\n\n                if (salaryRangeA > salaryRangeB) {\n                  return -1;\n                }\n\n                return 0;\n              });\n\n              if (orderAscd) {\n                setOffers(smoothies.reverse());\n                setOrderLocaly(\"widełki rosnoąco\");\n                setOrderAscd(!orderAscd);\n              } else if (!orderAscd) {\n                setOffers(smoothies);\n                setOrderLocaly(\"widełki malejąco\");\n                setOrderAscd(!orderAscd);\n              }\n            },\n            children: \"STAWKA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"searchbar_dsc\",\n            children: [\"Obecne sortowanie: \", orderLocaly]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"smoothies_list\",\n        children: smoothies.filter(post => {\n          if (query === \"\") {\n            return post;\n          } else if (post.title.toLowerCase().includes(query.toLowerCase())) {\n            return post;\n          }\n        }).map(post => {\n          if (post.created_by === token.user.id) {\n            return /*#__PURE__*/_jsxDEV(OfferCard, {\n              smoothie: post,\n              onDeleteProp: handleDelete,\n              token: token\n            }, post.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 21\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreatedOffers, \"1qG1q5SewvDzpYA440XjWpetYEE=\");\n\n_c = CreatedOffers;\nexport default CreatedOffers;\n/*  INSERT IN 219 LINE IF YOU WANT TO BACKUP OLD SHOW METHOD \r\n\r\n          <div className=\"smoothie-grid\">\r\n            {smoothies.map((smoothie) => (\r\n              //<p>{smoothie.title}</p> //\r\n              <OfferCard\r\n                key={smoothie.id}\r\n                smoothie={smoothie}\r\n                onDeleteProp={handleDelete}\r\n              /> //smoothie={smoothie} -> smoothie jest to prop do którego przekazujemy zmienna smoothie tak jak w Svelte\r\n            ))}\r\n          </div>\r\n\r\n\r\n*/\n\n/*     SHOW FOO \r\n\r\n<div className=\"smoothie-grid\">\r\n            foo2\r\n            {foundUsers && foundUsers.length > 0 ? (\r\n              foundUsers.map((foundSmoothies) => {\r\n                if (foundSmoothies.created_by === token.user.id) {\r\n                  return (\r\n                    <OfferCard\r\n                      key={foundSmoothies.id}\r\n                      smoothie={foundSmoothies}\r\n                      onDeleteProp={handleDelete}\r\n                      token={token}\r\n                    />\r\n                  );\r\n                }\r\n              })\r\n            ) : (\r\n              <h1>Nic nie znaleziono </h1>\r\n            )}\r\n            ;\r\n          </div> */\n\n/*  SHOW FOO V3\r\n          <div className=\"smoothie-grid\">\r\n            foo3\r\n            {smoothies.map((smoothie) => {\r\n              if (smoothie.created_by === token.user.id) {\r\n                return (\r\n                  <OfferCard\r\n                    key={smoothie.id}\r\n                    smoothie={smoothie}\r\n                    onDeleteProp={handleDelete}\r\n                  />\r\n                );\r\n              }\r\n            })}\r\n          </div> */\n\n/*        FILTER WITH FETCH /// SCRAP THAT \r\n          <div className=\"order-by\">\r\n            <p>Order by:</p>\r\n            <button onClick={() => setOrderBy(\"created_at\")}>\r\n              Time Created\r\n            </button>\r\n            <button onClick={() => setOrderBy(\"title\")}>Title</button>\r\n            <button onClick={() => setOrderBy(\"rating\")}>rating</button>\r\n            {orderBy}\r\n          </div>\r\n          */\n\n/*PIERWOWZÓR SEARCH BARA\r\n                        <div className=\"user-list\">\r\n              {foundUsers && foundUsers.length > 0 ? (\r\n                foundUsers.map((smoothies) => (\r\n                  <li key={smoothies.id} className=\"user\">\r\n                    <span className=\"user-id\">{smoothies.id}</span>\r\n                    <span className=\"user-name\">{smoothies.title}</span>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <h1>No results found!</h1>\r\n              )}\r\n            </div>\r\n            */\n\n/*V2 SEARCH BAR\r\n          \r\n           <div>\r\n            SEARCH:\r\n            <input\r\n              type=\"search\"\r\n              value={name}\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n                filter();\r\n              }}\r\n              className=\"input\"\r\n              placeholder=\"Filter\"\r\n            />\r\n          </div>\r\n          */\n//FUNKCJA FILTRUJACA V1\n\n/*\r\n  const filter = () => {\r\n    console.log(\"e target z filtr foo\");\r\n\r\n    if (name !== \"\") {\r\n      console.log(smoothies);\r\n      const results = smoothies.filter((user) => {\r\n        return user.title.toLowerCase().includes(name.toLowerCase());\r\n        // Use the toLowerCase() method to make it case-insensitive\r\n      });\r\n      setFoundUsers(results);\r\n    } else {\r\n      setFoundUsers(smoothies);\r\n      // If the text field is empty, show all users\r\n    }\r\n  };\r\n  */\n\n/*POMOCNY DEBUG  \r\n\r\n            <div className=\"debug\">\r\n            <button\r\n              onClick={() => {\r\n                console.log(smoothies);\r\n                console.log(\"CONSOL LOG DO WYŚWEITLANIA WARUNKOWEGO \");\r\n              }}\r\n            >\r\n              DEBUG\r\n            </button>\r\n          </div>\r\n\r\n*/\n\n/*             {/*KIERUNEK SORTOWANIA SCRAP*\r\n            \r\n                        {orderDirectionAscd && (\r\n              <div>\r\n                Ascnding true\r\n                <button\r\n                  onClick={() => setOrderDirectionAscd(!orderDirectionAscd)}\r\n                >\r\n                  {<i className=\"material-icons\">arrow_drop_up</i>}\r\n                </button>\r\n              </div>\r\n            )}\r\n            {!orderDirectionAscd && (\r\n              <div>\r\n                Ascnding false\r\n                <button\r\n                  onClick={() => setOrderDirectionAscd(!orderDirectionAscd)}\r\n                >\r\n                  {<i className=\"material-icons\">arrow_drop_down</i>}\r\n                </button>\r\n              </div>\r\n            )}\r\n            \r\n            /}\r\n            {orderLocaly} {/*wyświetla rodzaj sortowania \r\n            \r\n            \r\n            */\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatedOffers\");","map":{"version":3,"names":["supabase","useEffect","useState","OfferCard","CreatedOffers","token","fetchError","setFetchError","offers","setOffers","orderBy","setOrderBy","orderLocaly","setOrderLocaly","orderAscd","setOrderAscd","foundUsers","setFoundUsers","query","setQuery","zmiennaEffect","handleDelete","id","pervSmoothies","filter","sm","handleSortEffect","e","console","log","target","classList","add","fetchSmoothies","data","error","from","select","order","ascending","event","value","obj","smoothies","sort","a","b","dateA","created_at","dateB","reverse","nameA","title","toUpperCase","nameB","salaryRangeA","salary_low","salary_top","salaryRangeB","post","toLowerCase","includes","map","created_by","user"],"sources":["C:/Frontend22/Projects/inz/DevOffers.io/src/pages/CreatedOffers.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable array-callback-return */\r\nimport supabase from \"../config/supabaseClient\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n// components\r\n\r\nimport OfferCard from \"../components/offerCard\";\r\n\r\nconst CreatedOffers = ({ token }) => {\r\n  const [fetchError, setFetchError] = useState(null); // Fetch error, zmienna\r\n  const [offers, setOffers] = useState(null); // główna baza\r\n  const [orderBy, setOrderBy] = useState(\"created_at\"); // created_at jest nazwa kolumny w bazie\r\n  const [orderLocaly, setOrderLocaly] = useState(\"Sortowanie \");\r\n  const [orderAscd, setOrderAscd] = useState(true);\r\n  const [foundUsers, setFoundUsers] = useState(\"\");\r\n  const [query, setQuery] = useState(\"\");\r\n  let zmiennaEffect = \"none\";\r\n\r\n  //Funkcja usuwająca wpis lokalnie\r\n  const handleDelete = (id) => {\r\n    setOffers((pervSmoothies) => {\r\n      return pervSmoothies.filter((sm) => sm.id !== id);\r\n    });\r\n  };\r\n  //Funcjka sortująca\r\n  function handleSortEffect(e) {\r\n    console.log(e.target.id);\r\n    //setSortEffect(e.target.id);\r\n    zmiennaEffect = e.target.id;\r\n    switch (zmiennaEffect) {\r\n      case \"az\":\r\n        console.log(e.target);\r\n        e.target.classList.add(\"searchbar--active\");\r\n        break;\r\n      case \"data\":\r\n        e.target.classList.add(\"searchbar--active\");\r\n        break;\r\n      case \"salary\":\r\n        e.target.classList.add(\"searchbar--active\");\r\n        break;\r\n      default:\r\n        console.log(\"none1\");\r\n    }\r\n  }\r\n\r\n  //funkcja fetchujaca dane z database\r\n  useEffect(() => {\r\n    const fetchSmoothies = async () => {\r\n      const { data, error } = await supabase\r\n        .from(\"offers\")\r\n        .select()\r\n        .order(orderBy, { ascending: false }); // const { data, error } -> destrukturyzacja obiektu po lewej\r\n\r\n      if (error) {\r\n        setFetchError(\"Can;t fetch \");\r\n        setOffers(null);\r\n        console.log(error);\r\n      }\r\n      if (data) {\r\n        setOffers(data);\r\n        setFetchError(null);\r\n        console.log(\"POBRANO\");\r\n      }\r\n    };\r\n\r\n    fetchSmoothies();\r\n  }, []); //[orderBy] powoduje wywołanie Hooka useEffect za każdym użyciem orderby // brak tylko pojedyncze wywołanie\r\n\r\n  return (\r\n    <div className=\"page home\">\r\n      <h1>TWOJE OFERTY</h1>\r\n      {fetchError && <p>{fetchError}</p>}\r\n      {offers && (\r\n        <div className=\"offers\">\r\n          {/*Search/sort bar */}\r\n          <div className=\"searchbar\">\r\n            {/*Search input */}\r\n            <div className=\"searchbar_search\">\r\n              <input\r\n                onChange={(event) => setQuery(event.target.value)}\r\n                placeholder=\"WYSZUKAJ\"\r\n              />\r\n            </div>\r\n\r\n            {/*OPCJE SORTOWANIA  */}\r\n            <div className=\"searchbar_sort\">\r\n              <button\r\n                id=\"data\"\r\n                onClick={(obj) => {\r\n                  handleSortEffect(obj);\r\n                  smoothies.sort(function (a, b) {\r\n                    const dateA = a.created_at;\r\n                    const dateB = b.created_at;\r\n                    if (dateA > dateB) {\r\n                      return -1;\r\n                    }\r\n                    if (dateA < dateB) {\r\n                      return 1;\r\n                    }\r\n                    return 0;\r\n                  });\r\n                  if (orderAscd) {\r\n                    setOffers(smoothies.reverse());\r\n                    setOrderLocaly(\"Najstarsze najpierw \");\r\n                    setOrderAscd(!orderAscd);\r\n                  } else if (!orderAscd) {\r\n                    setOrderLocaly(\"Najnowsze najpierw\");\r\n                    setOffers(smoothies);\r\n                    setOrderAscd(!orderAscd);\r\n                  }\r\n                }}\r\n              >\r\n                DATA\r\n              </button>\r\n\r\n              <button\r\n                id=\"az\"\r\n                onClick={(obj) => {\r\n                  handleSortEffect(obj);\r\n                  smoothies.sort(function (a, b) {\r\n                    const nameA = a.title.toUpperCase(); // ignore upper and lowercase\r\n                    const nameB = b.title.toUpperCase(); // ignore upper and lowercase\r\n                    if (nameA > nameB) {\r\n                      return -1;\r\n                    }\r\n                    if (nameA < nameB) {\r\n                      return 1;\r\n                    }\r\n                    // names must be equal\r\n                    return 0;\r\n                  });\r\n                  if (orderAscd) {\r\n                    setOffers(smoothies.reverse());\r\n                    setOrderLocaly(\"Alfabetycznie rosnoąco\");\r\n                    setOrderAscd(!orderAscd);\r\n                  } else if (!orderAscd) {\r\n                    setOrderLocaly(\"Alfabetycznie malejąco\");\r\n                    setOffers(smoothies);\r\n                    setOrderAscd(!orderAscd);\r\n                  }\r\n                }}\r\n              >\r\n                A-Z\r\n              </button>\r\n              <button\r\n                id=\"salary\"\r\n                onClick={(obj) => {\r\n                  handleSortEffect(obj);\r\n                  smoothies.sort(function (a, b) {\r\n                    const salaryRangeA = (a.salary_low + a.salary_top) / 2;\r\n                    const salaryRangeB = (b.salary_low + b.salary_top) / 2;\r\n                    if (salaryRangeA < salaryRangeB) {\r\n                      return 1;\r\n                    }\r\n                    if (salaryRangeA > salaryRangeB) {\r\n                      return -1;\r\n                    }\r\n                    return 0;\r\n                  });\r\n                  if (orderAscd) {\r\n                    setOffers(smoothies.reverse());\r\n                    setOrderLocaly(\"widełki rosnoąco\");\r\n                    setOrderAscd(!orderAscd);\r\n                  } else if (!orderAscd) {\r\n                    setOffers(smoothies);\r\n                    setOrderLocaly(\"widełki malejąco\");\r\n                    setOrderAscd(!orderAscd);\r\n                  }\r\n                }}\r\n              >\r\n                STAWKA\r\n              </button>\r\n              <p className=\"searchbar_dsc\">Obecne sortowanie: {orderLocaly}</p>\r\n            </div>\r\n          </div>\r\n          {/*WYSWIETLANIE POSTÓW Z FILTREM I SORTOWANIEM  */}\r\n          <div className=\"smoothies_list\">\r\n            {smoothies\r\n              .filter((post) => {\r\n                if (query === \"\") {\r\n                  return post;\r\n                } else if (\r\n                  post.title.toLowerCase().includes(query.toLowerCase())\r\n                ) {\r\n                  return post;\r\n                }\r\n              })\r\n              .map((post) => {\r\n                if (post.created_by === token.user.id) {\r\n                  return (\r\n                    <OfferCard\r\n                      key={post.id}\r\n                      smoothie={post}\r\n                      onDeleteProp={handleDelete}\r\n                      token={token}\r\n                    />\r\n                  );\r\n                }\r\n              })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatedOffers;\r\n/*  INSERT IN 219 LINE IF YOU WANT TO BACKUP OLD SHOW METHOD \r\n\r\n          <div className=\"smoothie-grid\">\r\n            {smoothies.map((smoothie) => (\r\n              //<p>{smoothie.title}</p> //\r\n              <OfferCard\r\n                key={smoothie.id}\r\n                smoothie={smoothie}\r\n                onDeleteProp={handleDelete}\r\n              /> //smoothie={smoothie} -> smoothie jest to prop do którego przekazujemy zmienna smoothie tak jak w Svelte\r\n            ))}\r\n          </div>\r\n\r\n\r\n*/\r\n\r\n/*     SHOW FOO \r\n\r\n<div className=\"smoothie-grid\">\r\n            foo2\r\n            {foundUsers && foundUsers.length > 0 ? (\r\n              foundUsers.map((foundSmoothies) => {\r\n                if (foundSmoothies.created_by === token.user.id) {\r\n                  return (\r\n                    <OfferCard\r\n                      key={foundSmoothies.id}\r\n                      smoothie={foundSmoothies}\r\n                      onDeleteProp={handleDelete}\r\n                      token={token}\r\n                    />\r\n                  );\r\n                }\r\n              })\r\n            ) : (\r\n              <h1>Nic nie znaleziono </h1>\r\n            )}\r\n            ;\r\n          </div> */\r\n\r\n/*  SHOW FOO V3\r\n          <div className=\"smoothie-grid\">\r\n            foo3\r\n            {smoothies.map((smoothie) => {\r\n              if (smoothie.created_by === token.user.id) {\r\n                return (\r\n                  <OfferCard\r\n                    key={smoothie.id}\r\n                    smoothie={smoothie}\r\n                    onDeleteProp={handleDelete}\r\n                  />\r\n                );\r\n              }\r\n            })}\r\n          </div> */\r\n/*        FILTER WITH FETCH /// SCRAP THAT \r\n          <div className=\"order-by\">\r\n            <p>Order by:</p>\r\n            <button onClick={() => setOrderBy(\"created_at\")}>\r\n              Time Created\r\n            </button>\r\n            <button onClick={() => setOrderBy(\"title\")}>Title</button>\r\n            <button onClick={() => setOrderBy(\"rating\")}>rating</button>\r\n            {orderBy}\r\n          </div>\r\n          */\r\n\r\n/*PIERWOWZÓR SEARCH BARA\r\n                        <div className=\"user-list\">\r\n              {foundUsers && foundUsers.length > 0 ? (\r\n                foundUsers.map((smoothies) => (\r\n                  <li key={smoothies.id} className=\"user\">\r\n                    <span className=\"user-id\">{smoothies.id}</span>\r\n                    <span className=\"user-name\">{smoothies.title}</span>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <h1>No results found!</h1>\r\n              )}\r\n            </div>\r\n            */\r\n\r\n/*V2 SEARCH BAR\r\n          \r\n           <div>\r\n            SEARCH:\r\n            <input\r\n              type=\"search\"\r\n              value={name}\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n                filter();\r\n              }}\r\n              className=\"input\"\r\n              placeholder=\"Filter\"\r\n            />\r\n          </div>\r\n          */\r\n\r\n//FUNKCJA FILTRUJACA V1\r\n/*\r\n  const filter = () => {\r\n    console.log(\"e target z filtr foo\");\r\n\r\n    if (name !== \"\") {\r\n      console.log(smoothies);\r\n      const results = smoothies.filter((user) => {\r\n        return user.title.toLowerCase().includes(name.toLowerCase());\r\n        // Use the toLowerCase() method to make it case-insensitive\r\n      });\r\n      setFoundUsers(results);\r\n    } else {\r\n      setFoundUsers(smoothies);\r\n      // If the text field is empty, show all users\r\n    }\r\n  };\r\n  */\r\n/*POMOCNY DEBUG  \r\n\r\n            <div className=\"debug\">\r\n            <button\r\n              onClick={() => {\r\n                console.log(smoothies);\r\n                console.log(\"CONSOL LOG DO WYŚWEITLANIA WARUNKOWEGO \");\r\n              }}\r\n            >\r\n              DEBUG\r\n            </button>\r\n          </div>\r\n\r\n*/\r\n\r\n/*             {/*KIERUNEK SORTOWANIA SCRAP*\r\n            \r\n                        {orderDirectionAscd && (\r\n              <div>\r\n                Ascnding true\r\n                <button\r\n                  onClick={() => setOrderDirectionAscd(!orderDirectionAscd)}\r\n                >\r\n                  {<i className=\"material-icons\">arrow_drop_up</i>}\r\n                </button>\r\n              </div>\r\n            )}\r\n            {!orderDirectionAscd && (\r\n              <div>\r\n                Ascnding false\r\n                <button\r\n                  onClick={() => setOrderDirectionAscd(!orderDirectionAscd)}\r\n                >\r\n                  {<i className=\"material-icons\">arrow_drop_down</i>}\r\n                </button>\r\n              </div>\r\n            )}\r\n            \r\n            /}\r\n            {orderLocaly} {/*wyświetla rodzaj sortowania \r\n            \r\n            \r\n            */\r\n"],"mappings":"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},"metadata":{},"sourceType":"module"}