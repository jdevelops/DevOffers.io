{"ast":null,"code":"var _jsxFileName = \"C:\\\\Frontend22\\\\Projects\\\\inz\\\\DevOffers.io\\\\src\\\\pages\\\\CreatedOffers.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\n\n/* eslint-disable array-callback-return */\nimport supabase from \"../config/supabaseClient\";\nimport { useEffect, useState } from \"react\"; // components\n\nimport OfferCard from \"../components/offerCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreatedOffers = _ref => {\n  _s();\n\n  let {\n    token\n  } = _ref;\n  const [fetchError, setFetchError] = useState(null); // Fetch error, zmienna\n\n  const [offers, setSmoothies] = useState(null); // główna baza\n\n  const [orderBy, setOrderBy] = useState(\"created_at\"); // created_at jest nazwa kolumny w bazie\n\n  const [orderLocaly, setOrderLocaly] = useState(\"Sortowanie \");\n  const [orderAscd, setOrderAscd] = useState(true);\n  const [foundUsers, setFoundUsers] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  let zmiennaEffect = \"none\"; //Funkcja usuwająca wpis lokalnie\n\n  const handleDelete = id => {\n    setSmoothies(pervSmoothies => {\n      return pervSmoothies.filter(sm => sm.id !== id);\n    });\n  }; //Funcjka sortująca\n\n\n  function handleSortEffect(e) {\n    console.log(e.target.id); //setSortEffect(e.target.id);\n\n    zmiennaEffect = e.target.id;\n\n    switch (zmiennaEffect) {\n      case \"az\":\n        console.log(e.target);\n        e.target.classList.add(\"searchbar--active\");\n        break;\n\n      case \"data\":\n        e.target.classList.add(\"searchbar--active\");\n        break;\n\n      case \"salary\":\n        e.target.classList.add(\"searchbar--active\");\n        break;\n\n      default:\n        console.log(\"none1\");\n    }\n  } //funkcja fetchujaca dane z database\n\n\n  useEffect(() => {\n    const fetchSmoothies = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from(\"offers\").select().order(orderBy, {\n        ascending: false\n      }); // const { data, error } -> destrukturyzacja obiektu po lewej\n\n      if (error) {\n        setFetchError(\"Can;t fetch \");\n        setSmoothies(null);\n        console.log(error);\n      }\n\n      if (data) {\n        setSmoothies(data);\n        setFetchError(null);\n        console.log(\"POBRANO\");\n      }\n    };\n\n    fetchSmoothies();\n  }, []); //[orderBy] powoduje wywołanie Hooka useEffect za każdym użyciem orderby // brak tylko pojedyncze wywołanie\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TWOJE OFERTY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), fetchError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: fetchError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 24\n      }, this), offers && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"offers\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"searchbar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"searchbar_search\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: event => setQuery(event.target.value),\n              placeholder: \"WYSZUKAJ\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"searchbar_sort\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"data\",\n              onClick: obj => {\n                handleSortEffect(obj);\n                offers.sort(function (a, b) {\n                  const dateA = a.created_at;\n                  const dateB = b.created_at;\n\n                  if (dateA > dateB) {\n                    return -1;\n                  }\n\n                  if (dateA < dateB) {\n                    return 1;\n                  }\n\n                  return 0;\n                });\n\n                if (orderAscd) {\n                  setSmoothies(offers.reverse());\n                  setOrderLocaly(\"Najstarsze najpierw \");\n                  setOrderAscd(!orderAscd);\n                } else if (!orderAscd) {\n                  setOrderLocaly(\"Najnowsze najpierw\");\n                  setSmoothies(offers);\n                  setOrderAscd(!orderAscd);\n                }\n              },\n              children: \"DATA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"az\",\n              onClick: obj => {\n                handleSortEffect(obj);\n                offers.sort(function (a, b) {\n                  const nameA = a.title.toUpperCase(); // ignore upper and lowercase\n\n                  const nameB = b.title.toUpperCase(); // ignore upper and lowercase\n\n                  if (nameA > nameB) {\n                    return -1;\n                  }\n\n                  if (nameA < nameB) {\n                    return 1;\n                  } // names must be equal\n\n\n                  return 0;\n                });\n\n                if (orderAscd) {\n                  setSmoothies(offers.reverse());\n                  setOrderLocaly(\"Alfabetycznie rosnoąco\");\n                  setOrderAscd(!orderAscd);\n                } else if (!orderAscd) {\n                  setOrderLocaly(\"Alfabetycznie malejąco\");\n                  setSmoothies(offers);\n                  setOrderAscd(!orderAscd);\n                }\n              },\n              children: \"A-Z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"salary\",\n              onClick: obj => {\n                handleSortEffect(obj);\n                offers.sort(function (a, b) {\n                  const salaryRangeA = (a.salary_low + a.salary_top) / 2;\n                  const salaryRangeB = (b.salary_low + b.salary_top) / 2;\n\n                  if (salaryRangeA < salaryRangeB) {\n                    return 1;\n                  }\n\n                  if (salaryRangeA > salaryRangeB) {\n                    return -1;\n                  }\n\n                  return 0;\n                });\n\n                if (orderAscd) {\n                  setSmoothies(offers.reverse());\n                  setOrderLocaly(\"widełki rosnoąco\");\n                  setOrderAscd(!orderAscd);\n                } else if (!orderAscd) {\n                  setSmoothies(offers);\n                  setOrderLocaly(\"widełki malejąco\");\n                  setOrderAscd(!orderAscd);\n                }\n              },\n              children: \"STAWKA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"searchbar_dsc\",\n              children: [\"Obecne sortowanie: \", orderLocaly]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"smoothies_list\",\n          children: offers.filter(post => {\n            if (query === \"\") {\n              return post;\n            } else if (post.title.toLowerCase().includes(query.toLowerCase())) {\n              return post;\n            }\n          }).map(post => {\n            if (post.created_by === token.user.id) {\n              return /*#__PURE__*/_jsxDEV(OfferCard, {\n                offer: post,\n                onDeleteProp: handleDelete,\n                token: token\n              }, post.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 23\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreatedOffers, \"/hBpjuQo7bXXKpRVeWxxJ/DG5e8=\");\n\n_c = CreatedOffers;\nexport default CreatedOffers;\n/*  INSERT IN 219 LINE IF YOU WANT TO BACKUP OLD SHOW METHOD \r\n\r\n          <div className=\"offer-grid\">\r\n            {offers.map((offer) => (\r\n              //<p>{offer.title}</p> //\r\n              <SmoothieCard\r\n                key={offer.id}\r\n                offer={offer}\r\n                onDeleteProp={handleDelete}\r\n              /> //offer={offer} -> offer jest to prop do którego przekazujemy zmienna offer tak jak w Svelte\r\n            ))}\r\n          </div>\r\n\r\n\r\n*/\n\n/*     SHOW FOO \r\n\r\n<div className=\"offer-grid\">\r\n            foo2\r\n            {foundUsers && foundUsers.length > 0 ? (\r\n              foundUsers.map((foundSmoothies) => {\r\n                if (foundSmoothies.created_by === token.user.id) {\r\n                  return (\r\n                    <SmoothieCard\r\n                      key={foundSmoothies.id}\r\n                      offer={foundSmoothies}\r\n                      onDeleteProp={handleDelete}\r\n                      token={token}\r\n                    />\r\n                  );\r\n                }\r\n              })\r\n            ) : (\r\n              <h1>Nic nie znaleziono </h1>\r\n            )}\r\n            ;\r\n          </div> */\n\n/*  SHOW FOO V3\r\n          <div className=\"offer-grid\">\r\n            foo3\r\n            {offers.map((offer) => {\r\n              if (offer.created_by === token.user.id) {\r\n                return (\r\n                  <SmoothieCard\r\n                    key={offer.id}\r\n                    offer={offer}\r\n                    onDeleteProp={handleDelete}\r\n                  />\r\n                );\r\n              }\r\n            })}\r\n          </div> */\n\n/*        FILTER WITH FETCH /// SCRAP THAT \r\n          <div className=\"order-by\">\r\n            <p>Order by:</p>\r\n            <button onClick={() => setOrderBy(\"created_at\")}>\r\n              Time Created\r\n            </button>\r\n            <button onClick={() => setOrderBy(\"title\")}>Title</button>\r\n            <button onClick={() => setOrderBy(\"rating\")}>rating</button>\r\n            {orderBy}\r\n          </div>\r\n          */\n\n/*PIERWOWZÓR SEARCH BARA\r\n                        <div className=\"user-list\">\r\n              {foundUsers && foundUsers.length > 0 ? (\r\n                foundUsers.map((offers) => (\r\n                  <li key={offers.id} className=\"user\">\r\n                    <span className=\"user-id\">{offers.id}</span>\r\n                    <span className=\"user-name\">{offers.title}</span>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <h1>No results found!</h1>\r\n              )}\r\n            </div>\r\n            */\n\n/*V2 SEARCH BAR\r\n          \r\n           <div>\r\n            SEARCH:\r\n            <input\r\n              type=\"search\"\r\n              value={name}\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n                filter();\r\n              }}\r\n              className=\"input\"\r\n              placeholder=\"Filter\"\r\n            />\r\n          </div>\r\n          */\n//FUNKCJA FILTRUJACA V1\n\n/*\r\n  const filter = () => {\r\n    console.log(\"e target z filtr foo\");\r\n\r\n    if (name !== \"\") {\r\n      console.log(offers);\r\n      const results = offers.filter((user) => {\r\n        return user.title.toLowerCase().includes(name.toLowerCase());\r\n        // Use the toLowerCase() method to make it case-insensitive\r\n      });\r\n      setFoundUsers(results);\r\n    } else {\r\n      setFoundUsers(offers);\r\n      // If the text field is empty, show all users\r\n    }\r\n  };\r\n  */\n\n/*POMOCNY DEBUG  \r\n\r\n            <div className=\"debug\">\r\n            <button\r\n              onClick={() => {\r\n                console.log(offers);\r\n                console.log(\"CONSOL LOG DO WYŚWEITLANIA WARUNKOWEGO \");\r\n              }}\r\n            >\r\n              DEBUG\r\n            </button>\r\n          </div>\r\n\r\n*/\n\n/*             {/*KIERUNEK SORTOWANIA SCRAP*\r\n            \r\n                        {orderDirectionAscd && (\r\n              <div>\r\n                Ascnding true\r\n                <button\r\n                  onClick={() => setOrderDirectionAscd(!orderDirectionAscd)}\r\n                >\r\n                  {<i className=\"material-icons\">arrow_drop_up</i>}\r\n                </button>\r\n              </div>\r\n            )}\r\n            {!orderDirectionAscd && (\r\n              <div>\r\n                Ascnding false\r\n                <button\r\n                  onClick={() => setOrderDirectionAscd(!orderDirectionAscd)}\r\n                >\r\n                  {<i className=\"material-icons\">arrow_drop_down</i>}\r\n                </button>\r\n              </div>\r\n            )}\r\n            \r\n            /}\r\n            {orderLocaly} {/*wyświetla rodzaj sortowania \r\n            \r\n            \r\n            */\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatedOffers\");","map":{"version":3,"names":["supabase","useEffect","useState","OfferCard","CreatedOffers","token","fetchError","setFetchError","offers","setSmoothies","orderBy","setOrderBy","orderLocaly","setOrderLocaly","orderAscd","setOrderAscd","foundUsers","setFoundUsers","query","setQuery","zmiennaEffect","handleDelete","id","pervSmoothies","filter","sm","handleSortEffect","e","console","log","target","classList","add","fetchSmoothies","data","error","from","select","order","ascending","event","value","obj","sort","a","b","dateA","created_at","dateB","reverse","nameA","title","toUpperCase","nameB","salaryRangeA","salary_low","salary_top","salaryRangeB","post","toLowerCase","includes","map","created_by","user"],"sources":["C:/Frontend22/Projects/inz/DevOffers.io/src/pages/CreatedOffers.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable array-callback-return */\r\nimport supabase from \"../config/supabaseClient\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n// components\r\n\r\nimport OfferCard from \"../components/offerCard\";\r\n\r\nconst CreatedOffers = ({ token }) => {\r\n  const [fetchError, setFetchError] = useState(null); // Fetch error, zmienna\r\n  const [offers, setSmoothies] = useState(null); // główna baza\r\n  const [orderBy, setOrderBy] = useState(\"created_at\"); // created_at jest nazwa kolumny w bazie\r\n  const [orderLocaly, setOrderLocaly] = useState(\"Sortowanie \");\r\n  const [orderAscd, setOrderAscd] = useState(true);\r\n  const [foundUsers, setFoundUsers] = useState(\"\");\r\n  const [query, setQuery] = useState(\"\");\r\n  let zmiennaEffect = \"none\";\r\n\r\n  //Funkcja usuwająca wpis lokalnie\r\n  const handleDelete = (id) => {\r\n    setSmoothies((pervSmoothies) => {\r\n      return pervSmoothies.filter((sm) => sm.id !== id);\r\n    });\r\n  };\r\n  //Funcjka sortująca\r\n  function handleSortEffect(e) {\r\n    console.log(e.target.id);\r\n    //setSortEffect(e.target.id);\r\n    zmiennaEffect = e.target.id;\r\n    switch (zmiennaEffect) {\r\n      case \"az\":\r\n        console.log(e.target);\r\n        e.target.classList.add(\"searchbar--active\");\r\n        break;\r\n      case \"data\":\r\n        e.target.classList.add(\"searchbar--active\");\r\n        break;\r\n      case \"salary\":\r\n        e.target.classList.add(\"searchbar--active\");\r\n        break;\r\n      default:\r\n        console.log(\"none1\");\r\n    }\r\n  }\r\n\r\n  //funkcja fetchujaca dane z database\r\n  useEffect(() => {\r\n    const fetchSmoothies = async () => {\r\n      const { data, error } = await supabase\r\n        .from(\"offers\")\r\n        .select()\r\n        .order(orderBy, { ascending: false }); // const { data, error } -> destrukturyzacja obiektu po lewej\r\n\r\n      if (error) {\r\n        setFetchError(\"Can;t fetch \");\r\n        setSmoothies(null);\r\n        console.log(error);\r\n      }\r\n      if (data) {\r\n        setSmoothies(data);\r\n        setFetchError(null);\r\n        console.log(\"POBRANO\");\r\n      }\r\n    };\r\n\r\n    fetchSmoothies();\r\n  }, []); //[orderBy] powoduje wywołanie Hooka useEffect za każdym użyciem orderby // brak tylko pojedyncze wywołanie\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      {/*Wrapper*/}\r\n      <div className=\"home\">\r\n        <h1>TWOJE OFERTY</h1>\r\n        {fetchError && <p>{fetchError}</p>}\r\n        {offers && (\r\n          <div className=\"offers\">\r\n            {/*Search/sort bar */}\r\n            <div className=\"searchbar\">\r\n              {/*Search input */}\r\n              <div className=\"searchbar_search\">\r\n                <input\r\n                  onChange={(event) => setQuery(event.target.value)}\r\n                  placeholder=\"WYSZUKAJ\"\r\n                />\r\n              </div>\r\n\r\n              {/*OPCJE SORTOWANIA  */}\r\n              <div className=\"searchbar_sort\">\r\n                <button\r\n                  id=\"data\"\r\n                  onClick={(obj) => {\r\n                    handleSortEffect(obj);\r\n                    offers.sort(function (a, b) {\r\n                      const dateA = a.created_at;\r\n                      const dateB = b.created_at;\r\n                      if (dateA > dateB) {\r\n                        return -1;\r\n                      }\r\n                      if (dateA < dateB) {\r\n                        return 1;\r\n                      }\r\n                      return 0;\r\n                    });\r\n                    if (orderAscd) {\r\n                      setSmoothies(offers.reverse());\r\n                      setOrderLocaly(\"Najstarsze najpierw \");\r\n                      setOrderAscd(!orderAscd);\r\n                    } else if (!orderAscd) {\r\n                      setOrderLocaly(\"Najnowsze najpierw\");\r\n                      setSmoothies(offers);\r\n                      setOrderAscd(!orderAscd);\r\n                    }\r\n                  }}\r\n                >\r\n                  DATA\r\n                </button>\r\n\r\n                <button\r\n                  id=\"az\"\r\n                  onClick={(obj) => {\r\n                    handleSortEffect(obj);\r\n                    offers.sort(function (a, b) {\r\n                      const nameA = a.title.toUpperCase(); // ignore upper and lowercase\r\n                      const nameB = b.title.toUpperCase(); // ignore upper and lowercase\r\n                      if (nameA > nameB) {\r\n                        return -1;\r\n                      }\r\n                      if (nameA < nameB) {\r\n                        return 1;\r\n                      }\r\n                      // names must be equal\r\n                      return 0;\r\n                    });\r\n                    if (orderAscd) {\r\n                      setSmoothies(offers.reverse());\r\n                      setOrderLocaly(\"Alfabetycznie rosnoąco\");\r\n                      setOrderAscd(!orderAscd);\r\n                    } else if (!orderAscd) {\r\n                      setOrderLocaly(\"Alfabetycznie malejąco\");\r\n                      setSmoothies(offers);\r\n                      setOrderAscd(!orderAscd);\r\n                    }\r\n                  }}\r\n                >\r\n                  A-Z\r\n                </button>\r\n                <button\r\n                  id=\"salary\"\r\n                  onClick={(obj) => {\r\n                    handleSortEffect(obj);\r\n                    offers.sort(function (a, b) {\r\n                      const salaryRangeA = (a.salary_low + a.salary_top) / 2;\r\n                      const salaryRangeB = (b.salary_low + b.salary_top) / 2;\r\n                      if (salaryRangeA < salaryRangeB) {\r\n                        return 1;\r\n                      }\r\n                      if (salaryRangeA > salaryRangeB) {\r\n                        return -1;\r\n                      }\r\n                      return 0;\r\n                    });\r\n                    if (orderAscd) {\r\n                      setSmoothies(offers.reverse());\r\n                      setOrderLocaly(\"widełki rosnoąco\");\r\n                      setOrderAscd(!orderAscd);\r\n                    } else if (!orderAscd) {\r\n                      setSmoothies(offers);\r\n                      setOrderLocaly(\"widełki malejąco\");\r\n                      setOrderAscd(!orderAscd);\r\n                    }\r\n                  }}\r\n                >\r\n                  STAWKA\r\n                </button>\r\n                <p className=\"searchbar_dsc\">\r\n                  Obecne sortowanie: {orderLocaly}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            {/*WYSWIETLANIE POSTÓW Z FILTREM I SORTOWANIEM  */}\r\n            <div className=\"smoothies_list\">\r\n              {offers\r\n                .filter((post) => {\r\n                  if (query === \"\") {\r\n                    return post;\r\n                  } else if (\r\n                    post.title.toLowerCase().includes(query.toLowerCase())\r\n                  ) {\r\n                    return post;\r\n                  }\r\n                })\r\n                .map((post) => {\r\n                  if (post.created_by === token.user.id) {\r\n                    return (\r\n                      <OfferCard\r\n                        key={post.id}\r\n                        offer={post}\r\n                        onDeleteProp={handleDelete}\r\n                        token={token}\r\n                      />\r\n                    );\r\n                  }\r\n                })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatedOffers;\r\n/*  INSERT IN 219 LINE IF YOU WANT TO BACKUP OLD SHOW METHOD \r\n\r\n          <div className=\"offer-grid\">\r\n            {offers.map((offer) => (\r\n              //<p>{offer.title}</p> //\r\n              <SmoothieCard\r\n                key={offer.id}\r\n                offer={offer}\r\n                onDeleteProp={handleDelete}\r\n              /> //offer={offer} -> offer jest to prop do którego przekazujemy zmienna offer tak jak w Svelte\r\n            ))}\r\n          </div>\r\n\r\n\r\n*/\r\n\r\n/*     SHOW FOO \r\n\r\n<div className=\"offer-grid\">\r\n            foo2\r\n            {foundUsers && foundUsers.length > 0 ? (\r\n              foundUsers.map((foundSmoothies) => {\r\n                if (foundSmoothies.created_by === token.user.id) {\r\n                  return (\r\n                    <SmoothieCard\r\n                      key={foundSmoothies.id}\r\n                      offer={foundSmoothies}\r\n                      onDeleteProp={handleDelete}\r\n                      token={token}\r\n                    />\r\n                  );\r\n                }\r\n              })\r\n            ) : (\r\n              <h1>Nic nie znaleziono </h1>\r\n            )}\r\n            ;\r\n          </div> */\r\n\r\n/*  SHOW FOO V3\r\n          <div className=\"offer-grid\">\r\n            foo3\r\n            {offers.map((offer) => {\r\n              if (offer.created_by === token.user.id) {\r\n                return (\r\n                  <SmoothieCard\r\n                    key={offer.id}\r\n                    offer={offer}\r\n                    onDeleteProp={handleDelete}\r\n                  />\r\n                );\r\n              }\r\n            })}\r\n          </div> */\r\n/*        FILTER WITH FETCH /// SCRAP THAT \r\n          <div className=\"order-by\">\r\n            <p>Order by:</p>\r\n            <button onClick={() => setOrderBy(\"created_at\")}>\r\n              Time Created\r\n            </button>\r\n            <button onClick={() => setOrderBy(\"title\")}>Title</button>\r\n            <button onClick={() => setOrderBy(\"rating\")}>rating</button>\r\n            {orderBy}\r\n          </div>\r\n          */\r\n\r\n/*PIERWOWZÓR SEARCH BARA\r\n                        <div className=\"user-list\">\r\n              {foundUsers && foundUsers.length > 0 ? (\r\n                foundUsers.map((offers) => (\r\n                  <li key={offers.id} className=\"user\">\r\n                    <span className=\"user-id\">{offers.id}</span>\r\n                    <span className=\"user-name\">{offers.title}</span>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <h1>No results found!</h1>\r\n              )}\r\n            </div>\r\n            */\r\n\r\n/*V2 SEARCH BAR\r\n          \r\n           <div>\r\n            SEARCH:\r\n            <input\r\n              type=\"search\"\r\n              value={name}\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n                filter();\r\n              }}\r\n              className=\"input\"\r\n              placeholder=\"Filter\"\r\n            />\r\n          </div>\r\n          */\r\n\r\n//FUNKCJA FILTRUJACA V1\r\n/*\r\n  const filter = () => {\r\n    console.log(\"e target z filtr foo\");\r\n\r\n    if (name !== \"\") {\r\n      console.log(offers);\r\n      const results = offers.filter((user) => {\r\n        return user.title.toLowerCase().includes(name.toLowerCase());\r\n        // Use the toLowerCase() method to make it case-insensitive\r\n      });\r\n      setFoundUsers(results);\r\n    } else {\r\n      setFoundUsers(offers);\r\n      // If the text field is empty, show all users\r\n    }\r\n  };\r\n  */\r\n/*POMOCNY DEBUG  \r\n\r\n            <div className=\"debug\">\r\n            <button\r\n              onClick={() => {\r\n                console.log(offers);\r\n                console.log(\"CONSOL LOG DO WYŚWEITLANIA WARUNKOWEGO \");\r\n              }}\r\n            >\r\n              DEBUG\r\n            </button>\r\n          </div>\r\n\r\n*/\r\n\r\n/*             {/*KIERUNEK SORTOWANIA SCRAP*\r\n            \r\n                        {orderDirectionAscd && (\r\n              <div>\r\n                Ascnding true\r\n                <button\r\n                  onClick={() => setOrderDirectionAscd(!orderDirectionAscd)}\r\n                >\r\n                  {<i className=\"material-icons\">arrow_drop_up</i>}\r\n                </button>\r\n              </div>\r\n            )}\r\n            {!orderDirectionAscd && (\r\n              <div>\r\n                Ascnding false\r\n                <button\r\n                  onClick={() => setOrderDirectionAscd(!orderDirectionAscd)}\r\n                >\r\n                  {<i className=\"material-icons\">arrow_drop_down</i>}\r\n                </button>\r\n              </div>\r\n            )}\r\n            \r\n            /}\r\n            {orderLocaly} {/*wyświetla rodzaj sortowania \r\n            \r\n            \r\n            */\r\n"],"mappings":";;;AAAA;;AACA;AACA,OAAOA,QAAP,MAAqB,0BAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CAEA;;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAEA,MAAMC,aAAa,GAAG,QAAe;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EACnC,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,IAAD,CAA5C,CADmC,CACiB;;EACpD,MAAM,CAACM,MAAD,EAASC,YAAT,IAAyBP,QAAQ,CAAC,IAAD,CAAvC,CAFmC,CAEY;;EAC/C,MAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,YAAD,CAAtC,CAHmC,CAGmB;;EACtD,MAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,aAAD,CAA9C;EACA,MAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;EACA,IAAIkB,aAAa,GAAG,MAApB,CARmC,CAUnC;;EACA,MAAMC,YAAY,GAAIC,EAAD,IAAQ;IAC3Bb,YAAY,CAAEc,aAAD,IAAmB;MAC9B,OAAOA,aAAa,CAACC,MAAd,CAAsBC,EAAD,IAAQA,EAAE,CAACH,EAAH,KAAUA,EAAvC,CAAP;IACD,CAFW,CAAZ;EAGD,CAJD,CAXmC,CAgBnC;;;EACA,SAASI,gBAAT,CAA0BC,CAA1B,EAA6B;IAC3BC,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASR,EAArB,EAD2B,CAE3B;;IACAF,aAAa,GAAGO,CAAC,CAACG,MAAF,CAASR,EAAzB;;IACA,QAAQF,aAAR;MACE,KAAK,IAAL;QACEQ,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAd;QACAH,CAAC,CAACG,MAAF,CAASC,SAAT,CAAmBC,GAAnB,CAAuB,mBAAvB;QACA;;MACF,KAAK,MAAL;QACEL,CAAC,CAACG,MAAF,CAASC,SAAT,CAAmBC,GAAnB,CAAuB,mBAAvB;QACA;;MACF,KAAK,QAAL;QACEL,CAAC,CAACG,MAAF,CAASC,SAAT,CAAmBC,GAAnB,CAAuB,mBAAvB;QACA;;MACF;QACEJ,OAAO,CAACC,GAAR,CAAY,OAAZ;IAZJ;EAcD,CAnCkC,CAqCnC;;;EACA5B,SAAS,CAAC,MAAM;IACd,MAAMgC,cAAc,GAAG,YAAY;MACjC,MAAM;QAAEC,IAAF;QAAQC;MAAR,IAAkB,MAAMnC,QAAQ,CACnCoC,IAD2B,CACtB,QADsB,EAE3BC,MAF2B,GAG3BC,KAH2B,CAGrB5B,OAHqB,EAGZ;QAAE6B,SAAS,EAAE;MAAb,CAHY,CAA9B,CADiC,CAIQ;;MAEzC,IAAIJ,KAAJ,EAAW;QACT5B,aAAa,CAAC,cAAD,CAAb;QACAE,YAAY,CAAC,IAAD,CAAZ;QACAmB,OAAO,CAACC,GAAR,CAAYM,KAAZ;MACD;;MACD,IAAID,IAAJ,EAAU;QACRzB,YAAY,CAACyB,IAAD,CAAZ;QACA3B,aAAa,CAAC,IAAD,CAAb;QACAqB,OAAO,CAACC,GAAR,CAAY,SAAZ;MACD;IACF,CAhBD;;IAkBAI,cAAc;EACf,CApBQ,EAoBN,EApBM,CAAT,CAtCmC,CA0D3B;;EAER,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,uBAEE;MAAK,SAAS,EAAC,MAAf;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAEG3B,UAAU,iBAAI;QAAA,UAAIA;MAAJ;QAAA;QAAA;QAAA;MAAA,QAFjB,EAGGE,MAAM,iBACL;QAAK,SAAS,EAAC,QAAf;QAAA,wBAEE;UAAK,SAAS,EAAC,WAAf;UAAA,wBAEE;YAAK,SAAS,EAAC,kBAAf;YAAA,uBACE;cACE,QAAQ,EAAGgC,KAAD,IAAWrB,QAAQ,CAACqB,KAAK,CAACV,MAAN,CAAaW,KAAd,CAD/B;cAEE,WAAW,EAAC;YAFd;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QAFF,eAUE;YAAK,SAAS,EAAC,gBAAf;YAAA,wBACE;cACE,EAAE,EAAC,MADL;cAEE,OAAO,EAAGC,GAAD,IAAS;gBAChBhB,gBAAgB,CAACgB,GAAD,CAAhB;gBACAlC,MAAM,CAACmC,IAAP,CAAY,UAAUC,CAAV,EAAaC,CAAb,EAAgB;kBAC1B,MAAMC,KAAK,GAAGF,CAAC,CAACG,UAAhB;kBACA,MAAMC,KAAK,GAAGH,CAAC,CAACE,UAAhB;;kBACA,IAAID,KAAK,GAAGE,KAAZ,EAAmB;oBACjB,OAAO,CAAC,CAAR;kBACD;;kBACD,IAAIF,KAAK,GAAGE,KAAZ,EAAmB;oBACjB,OAAO,CAAP;kBACD;;kBACD,OAAO,CAAP;gBACD,CAVD;;gBAWA,IAAIlC,SAAJ,EAAe;kBACbL,YAAY,CAACD,MAAM,CAACyC,OAAP,EAAD,CAAZ;kBACApC,cAAc,CAAC,sBAAD,CAAd;kBACAE,YAAY,CAAC,CAACD,SAAF,CAAZ;gBACD,CAJD,MAIO,IAAI,CAACA,SAAL,EAAgB;kBACrBD,cAAc,CAAC,oBAAD,CAAd;kBACAJ,YAAY,CAACD,MAAD,CAAZ;kBACAO,YAAY,CAAC,CAACD,SAAF,CAAZ;gBACD;cACF,CAxBH;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eA8BE;cACE,EAAE,EAAC,IADL;cAEE,OAAO,EAAG4B,GAAD,IAAS;gBAChBhB,gBAAgB,CAACgB,GAAD,CAAhB;gBACAlC,MAAM,CAACmC,IAAP,CAAY,UAAUC,CAAV,EAAaC,CAAb,EAAgB;kBAC1B,MAAMK,KAAK,GAAGN,CAAC,CAACO,KAAF,CAAQC,WAAR,EAAd,CAD0B,CACW;;kBACrC,MAAMC,KAAK,GAAGR,CAAC,CAACM,KAAF,CAAQC,WAAR,EAAd,CAF0B,CAEW;;kBACrC,IAAIF,KAAK,GAAGG,KAAZ,EAAmB;oBACjB,OAAO,CAAC,CAAR;kBACD;;kBACD,IAAIH,KAAK,GAAGG,KAAZ,EAAmB;oBACjB,OAAO,CAAP;kBACD,CARyB,CAS1B;;;kBACA,OAAO,CAAP;gBACD,CAXD;;gBAYA,IAAIvC,SAAJ,EAAe;kBACbL,YAAY,CAACD,MAAM,CAACyC,OAAP,EAAD,CAAZ;kBACApC,cAAc,CAAC,wBAAD,CAAd;kBACAE,YAAY,CAAC,CAACD,SAAF,CAAZ;gBACD,CAJD,MAIO,IAAI,CAACA,SAAL,EAAgB;kBACrBD,cAAc,CAAC,wBAAD,CAAd;kBACAJ,YAAY,CAACD,MAAD,CAAZ;kBACAO,YAAY,CAAC,CAACD,SAAF,CAAZ;gBACD;cACF,CAzBH;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QA9BF,eA2DE;cACE,EAAE,EAAC,QADL;cAEE,OAAO,EAAG4B,GAAD,IAAS;gBAChBhB,gBAAgB,CAACgB,GAAD,CAAhB;gBACAlC,MAAM,CAACmC,IAAP,CAAY,UAAUC,CAAV,EAAaC,CAAb,EAAgB;kBAC1B,MAAMS,YAAY,GAAG,CAACV,CAAC,CAACW,UAAF,GAAeX,CAAC,CAACY,UAAlB,IAAgC,CAArD;kBACA,MAAMC,YAAY,GAAG,CAACZ,CAAC,CAACU,UAAF,GAAeV,CAAC,CAACW,UAAlB,IAAgC,CAArD;;kBACA,IAAIF,YAAY,GAAGG,YAAnB,EAAiC;oBAC/B,OAAO,CAAP;kBACD;;kBACD,IAAIH,YAAY,GAAGG,YAAnB,EAAiC;oBAC/B,OAAO,CAAC,CAAR;kBACD;;kBACD,OAAO,CAAP;gBACD,CAVD;;gBAWA,IAAI3C,SAAJ,EAAe;kBACbL,YAAY,CAACD,MAAM,CAACyC,OAAP,EAAD,CAAZ;kBACApC,cAAc,CAAC,kBAAD,CAAd;kBACAE,YAAY,CAAC,CAACD,SAAF,CAAZ;gBACD,CAJD,MAIO,IAAI,CAACA,SAAL,EAAgB;kBACrBL,YAAY,CAACD,MAAD,CAAZ;kBACAK,cAAc,CAAC,kBAAD,CAAd;kBACAE,YAAY,CAAC,CAACD,SAAF,CAAZ;gBACD;cACF,CAxBH;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QA3DF,eAuFE;cAAG,SAAS,EAAC,eAAb;cAAA,kCACsBF,WADtB;YAAA;cAAA;cAAA;cAAA;YAAA,QAvFF;UAAA;YAAA;YAAA;YAAA;UAAA,QAVF;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAyGE;UAAK,SAAS,EAAC,gBAAf;UAAA,UACGJ,MAAM,CACJgB,MADF,CACUkC,IAAD,IAAU;YAChB,IAAIxC,KAAK,KAAK,EAAd,EAAkB;cAChB,OAAOwC,IAAP;YACD,CAFD,MAEO,IACLA,IAAI,CAACP,KAAL,CAAWQ,WAAX,GAAyBC,QAAzB,CAAkC1C,KAAK,CAACyC,WAAN,EAAlC,CADK,EAEL;cACA,OAAOD,IAAP;YACD;UACF,CATF,EAUEG,GAVF,CAUOH,IAAD,IAAU;YACb,IAAIA,IAAI,CAACI,UAAL,KAAoBzD,KAAK,CAAC0D,IAAN,CAAWzC,EAAnC,EAAuC;cACrC,oBACE,QAAC,SAAD;gBAEE,KAAK,EAAEoC,IAFT;gBAGE,YAAY,EAAErC,YAHhB;gBAIE,KAAK,EAAEhB;cAJT,GACOqD,IAAI,CAACpC,EADZ;gBAAA;gBAAA;gBAAA;cAAA,QADF;YAQD;UACF,CArBF;QADH;UAAA;UAAA;UAAA;QAAA,QAzGF;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA;EAFF;IAAA;IAAA;IAAA;EAAA,QADF;AA6ID,CAzMD;;GAAMlB,a;;KAAAA,a;AA2MN,eAAeA,aAAf},"metadata":{},"sourceType":"module"}