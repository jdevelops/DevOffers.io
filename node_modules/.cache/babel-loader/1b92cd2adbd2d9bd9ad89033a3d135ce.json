{"ast":null,"code":"var _jsxFileName = \"C:\\\\Frontend22\\\\Projects\\\\inz\\\\DevOffers.io\\\\src\\\\pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport supabase from \"../config/supabaseClient\";\nimport { useEffect, useState } from \"react\"; // components\n\nimport SmoothieCard from \"../components/smoothieCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [fetchError, setFetchError] = useState(null); // miejsce przechowywania danych  Tzw. State Reacta\n\n  const [smoothies, setSmoothies] = useState(null); // miejsce przechowywania danych  Tzw. State Reacta\n\n  useEffect(() => {\n    const fetchSmoothies = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from(\"smoothies\").select(); // const { data, error } -> destrukturyzacja obiektu po lewej\n\n      if (error) {\n        setFetchError(\"Can;t fetch \");\n        setSmoothies(null);\n        console.log(error);\n      }\n\n      if (data) {\n        setSmoothies(data);\n        setFetchError(null);\n      }\n    };\n\n    fetchSmoothies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page home\",\n    children: [fetchError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: fetchError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 22\n    }, this), smoothies && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"smoothies\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"smoothie-grid\",\n        children: smoothies.map(smoothie =>\n        /*#__PURE__*/\n        //<p>{smoothie.title}</p> //\n        _jsxDEV(SmoothieCard, {\n          smoothie: smoothie\n        }, smoothie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this) //smoothie={smoothie} -> smoothie jest to prop do którego przekazujemy zmienna smoothie tak jak w Svelte\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"Nt+EL2MZFqrrCRB/7JmVhgTEi4c=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["supabase","useEffect","useState","SmoothieCard","Home","fetchError","setFetchError","smoothies","setSmoothies","fetchSmoothies","data","error","from","select","console","log","map","smoothie","id"],"sources":["C:/Frontend22/Projects/inz/DevOffers.io/src/pages/Home.js"],"sourcesContent":["import supabase from \"../config/supabaseClient\";\nimport { useEffect, useState } from \"react\";\n\n// components\n\nimport SmoothieCard from \"../components/smoothieCard\";\n\nconst Home = () => {\n  const [fetchError, setFetchError] = useState(null); // miejsce przechowywania danych  Tzw. State Reacta\n  const [smoothies, setSmoothies] = useState(null); // miejsce przechowywania danych  Tzw. State Reacta\n\n  useEffect(() => {\n    const fetchSmoothies = async () => {\n      const { data, error } = await supabase.from(\"smoothies\").select(); // const { data, error } -> destrukturyzacja obiektu po lewej\n      if (error) {\n        setFetchError(\"Can;t fetch \");\n        setSmoothies(null);\n        console.log(error);\n      }\n      if (data) {\n        setSmoothies(data);\n        setFetchError(null);\n      }\n    };\n\n    fetchSmoothies();\n  }, []);\n  return (\n    <div className=\"page home\">\n      {fetchError && <p>{fetchError}</p>}\n      {smoothies && (\n        <div className=\"smoothies\">\n          <div className=\"smoothie-grid\">\n            {smoothies.map((smoothie) => (\n              //<p>{smoothie.title}</p> //\n              <SmoothieCard key={smoothie.id} smoothie={smoothie} /> //smoothie={smoothie} -> smoothie jest to prop do którego przekazujemy zmienna smoothie tak jak w Svelte\n            ))}\n          </div>\n        </div>\n      )}\n      <h2>Home</h2>\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,0BAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CAEA;;AAEA,OAAOC,YAAP,MAAyB,4BAAzB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,IAAD,CAA5C,CADiB,CACmC;;EACpD,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C,CAFiB,CAEiC;;EAElDD,SAAS,CAAC,MAAM;IACd,MAAMQ,cAAc,GAAG,YAAY;MACjC,MAAM;QAAEC,IAAF;QAAQC;MAAR,IAAkB,MAAMX,QAAQ,CAACY,IAAT,CAAc,WAAd,EAA2BC,MAA3B,EAA9B,CADiC,CACkC;;MACnE,IAAIF,KAAJ,EAAW;QACTL,aAAa,CAAC,cAAD,CAAb;QACAE,YAAY,CAAC,IAAD,CAAZ;QACAM,OAAO,CAACC,GAAR,CAAYJ,KAAZ;MACD;;MACD,IAAID,IAAJ,EAAU;QACRF,YAAY,CAACE,IAAD,CAAZ;QACAJ,aAAa,CAAC,IAAD,CAAb;MACD;IACF,CAXD;;IAaAG,cAAc;EACf,CAfQ,EAeN,EAfM,CAAT;EAgBA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,WACGJ,UAAU,iBAAI;MAAA,UAAIA;IAAJ;MAAA;MAAA;MAAA;IAAA,QADjB,EAEGE,SAAS,iBACR;MAAK,SAAS,EAAC,WAAf;MAAA,uBACE;QAAK,SAAS,EAAC,eAAf;QAAA,UACGA,SAAS,CAACS,GAAV,CAAeC,QAAD;QAAA;QACb;QACA,QAAC,YAAD;UAAgC,QAAQ,EAAEA;QAA1C,GAAmBA,QAAQ,CAACC,EAA5B;UAAA;UAAA;UAAA;QAAA,QAFa,CAE0C;QAFxD;MADH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAHJ,eAYE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CApCD;;GAAMd,I;;KAAAA,I;AAsCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}